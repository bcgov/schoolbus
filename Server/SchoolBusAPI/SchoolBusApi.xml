<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SchoolBusAPI</name>
    </assembly>
    <members>
        <member name="M:SchoolBusAPI.Authorization.PermissionHandlerExtensions.RegisterPermissionHandler(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers <see cref="T:SchoolBusAPI.Authorization.PermissionHandler"/> with Dependency Injection.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Authorization.PermissionHandler">
            <summary>
            Permission handler
            </summary>
            <remarks>
            Must be registered with Dependency Injection
            </remarks>
        </member>
        <member name="T:SchoolBusAPI.Authorization.RequiresPermissionAttribute">
            <summary>
            Allows declarative claims based permissions to be applied to controller methods for authorization.
            </summary>
            <remarks>
            This attribute works well at the controller level. That said this attribute is not triggered by default when applied to methods inside
            a service implementation of a controller.  For instance, many of the controllers in the project are
            auto-generated with the implementation being deferred to a service implementation which is injected
            at runtime (good pattern).  This attribute will work when applied directly to methods of the controller, 
            but will not be triggered when applied to the corresponding methods of the implementation.
            
            As a workaround you can use the <see cref="M:SchoolBusAPI.Authorization.ClaimsPrincipalExtensions.HasPermissions(System.Security.Claims.ClaimsPrincipal,System.String[])"/> 
            extension method, You will need to have the HttpContext injected into the service implementation via dependency injection in order
            to access the User (ClaimsPrincipal) in order to perform the permissions check.
            
            A more permanent solution would be to implement a provider that looks for the attribute on service implementations
            and ensures it is executed. 
            </remarks>
            <see href="http://benjamincollins.com/blog/practical-permission-based-authorization-in-asp-net-core/"/>
        </member>
        <member name="T:SchoolBusAPI.Models.User">
            <summary>
            Information about the users of the system.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.User.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.User.#ctor(System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{SchoolBusAPI.Models.UserRole},SchoolBusAPI.Models.District)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.User" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a User (required).</param>
            <param name="GivenName">Given name of the user. (required).</param>
            <param name="Surname">Surname of the user. (required).</param>
            <param name="Active">A flag indicating the User is active in the system. Set false to remove access to the system for the user. (required).</param>
            <param name="Initials">Initials of the user, to be presented where screen space is at a premium..</param>
            <param name="Email">The email address of the user in the system..</param>
            <param name="SmUserId">Security Manager User ID.</param>
            <param name="Guid">The GUID unique to the user as provided by the authentication system. In this case, authentication is done by Siteminder and the GUID uniquely identifies the user within the user directories managed by Siteminder - e.g. IDIR and BCeID. The GUID is equivalent to the IDIR Id, but is guaranteed unique to a person, while the IDIR ID is not - IDIR IDs can be recycled..</param>
            <param name="SmAuthorizationDirectory">The user directory service used by Siteminder to authenticate the user - usually IDIR or BCeID..</param>
            <param name="UserRoles">UserRoles.</param>
            <param name="District">The District that the User belongs to.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.User.Id">
            <summary>
            A system-generated unique identifier for a User
            </summary>
            <value>A system-generated unique identifier for a User</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.GivenName">
            <summary>
            Given name of the user.
            </summary>
            <value>Given name of the user.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.Surname">
            <summary>
            Surname of the user.
            </summary>
            <value>Surname of the user.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.Active">
            <summary>
            A flag indicating the User is active in the system. Set false to remove access to the system for the user.
            </summary>
            <value>A flag indicating the User is active in the system. Set false to remove access to the system for the user.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.Initials">
            <summary>
            Initials of the user, to be presented where screen space is at a premium.
            </summary>
            <value>Initials of the user, to be presented where screen space is at a premium.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.Email">
            <summary>
            The email address of the user in the system.
            </summary>
            <value>The email address of the user in the system.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.SmUserId">
            <summary>
            Security Manager User ID
            </summary>
            <value>Security Manager User ID</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.Guid">
            <summary>
            The GUID unique to the user as provided by the authentication system. In this case, authentication is done by Siteminder and the GUID uniquely identifies the user within the user directories managed by Siteminder - e.g. IDIR and BCeID. The GUID is equivalent to the IDIR Id, but is guaranteed unique to a person, while the IDIR ID is not - IDIR IDs can be recycled.
            </summary>
            <value>The GUID unique to the user as provided by the authentication system. In this case, authentication is done by Siteminder and the GUID uniquely identifies the user within the user directories managed by Siteminder - e.g. IDIR and BCeID. The GUID is equivalent to the IDIR Id, but is guaranteed unique to a person, while the IDIR ID is not - IDIR IDs can be recycled.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.SmAuthorizationDirectory">
            <summary>
            The user directory service used by Siteminder to authenticate the user - usually IDIR or BCeID.
            </summary>
            <value>The user directory service used by Siteminder to authenticate the user - usually IDIR or BCeID.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.UserRoles">
            <summary>
            Gets or Sets UserRoles
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.User.District">
            <summary>
            The District that the User belongs to
            </summary>
            <value>The District that the User belongs to</value>
        </member>
        <member name="P:SchoolBusAPI.Models.User.DistrictId">
            <summary>
            Foreign key for District 
            </summary>   
        </member>
        <member name="M:SchoolBusAPI.Models.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.User.Equals(SchoolBusAPI.Models.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="other">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.User.op_Equality(SchoolBusAPI.Models.User,SchoolBusAPI.Models.User)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.User.op_Inequality(SchoolBusAPI.Models.User,SchoolBusAPI.Models.User)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.IDbAppContext.BeginTransaction">
            <summary>
            Starts a new transaction.
            </summary>
            <returns>
            A Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction that represents
            the started transaction.
            </returns>
        </member>
        <member name="M:SchoolBusAPI.Models.DbAppContext.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.EntityFrameworkCore.DbContextOptions{SchoolBusAPI.Models.DbAppContext},Microsoft.Extensions.Logging.ILogger{SchoolBusAPI.Models.DbAppContext})">
            <summary>
            Constructor for Class used for Entity Framework access.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.DbAppContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Override for OnModelCreating - used to change the database naming convention.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.DbAppContext.BeginTransaction">
            <summary>
            Starts a new transaction.
            </summary>
            <returns>
            A Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction that represents
            the started transaction.
            </returns>
        </member>
        <member name="P:SchoolBusAPI.Models.DbAppContext.HttpContextUser">
            <summary>
            Returns the current web user
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.DbAppContext.GetCurrentUserId">
            <summary>
            Returns the current user ID 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.DbAppContext.SaveChanges">
            <summary>
            Override for Save Changes to implement the audit log
            </summary>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Role">
            <summary>
            
            </summary>
            <summary>
            A table managed in the application by authorized users to create named Roles that can be assigned to Users as needed. Roles can be created as needed to support the users of the system and the roles they perform within the organization.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.AddPermission(SchoolBusAPI.Models.Permission)">
            <summary>
            Adds a permission to this role instance.
            </summary>
            <param name="permission">The permission to add.</param>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.RemovePermission(SchoolBusAPI.Models.Permission)">
            <summary>
            Removes a permission from this role instance.
            </summary>
            <param name="permission">The permission to remove.</param>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.#ctor(System.Int32,System.String,System.String,System.Collections.Generic.List{SchoolBusAPI.Models.RolePermission},System.Collections.Generic.List{SchoolBusAPI.Models.UserRole})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Role" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a Role (required).</param>
            <param name="Name">The name of the Role, as established by the user creating the role. (required).</param>
            <param name="Description">A description of the role as set by the user creating&amp;#x2F;updating the role. (required).</param>
            <param name="RolePermissions">RolePermissions.</param>
            <param name="UserRoles">UserRoles.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Role.Id">
            <summary>
            A system-generated unique identifier for a Role
            </summary>
            <value>A system-generated unique identifier for a Role</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Role.Name">
            <summary>
            The name of the Role, as established by the user creating the role.
            </summary>
            <value>The name of the Role, as established by the user creating the role.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Role.Description">
            <summary>
            A description of the role as set by the user creating&#x2F;updating the role.
            </summary>
            <value>A description of the role as set by the user creating&#x2F;updating the role.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Role.ExpiryDate">
            <summary>
            The date on which a role was removed.
            </summary>
            <value>The date on which a role was removed.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Role.RolePermissions">
            <summary>
            Gets or Sets RolePermissions
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Role.UserRoles">
            <summary>
            Gets or Sets UserRoles
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.Equals(SchoolBusAPI.Models.Role)">
            <summary>
            Returns true if Role instances are equal
            </summary>
            <param name="other">Instance of Role to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.op_Equality(SchoolBusAPI.Models.Role,SchoolBusAPI.Models.Role)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Role.op_Inequality(SchoolBusAPI.Models.Role,SchoolBusAPI.Models.Role)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.SchoolBus">
            <summary>
            The School Bus vehicle information supplementary to the vehicle information in ICBC
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.AddHistory(System.String,System.String)">
            <summary>
            Add a history record to the SchoolBus
            </summary>
            <param name="text">text for the history entry</param>
            <param name="smUserId">Site Minder User ID for the history entry</param>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.Id">
            <summary>
            A system-generated unique identifier for a SchoolBus
            </summary>
            <value>A system-generated unique identifier for a SchoolBus</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.Status">
            <summary>
            Status of the school bus record - current values are Inactive, Active, Archived
            </summary>
            <value>Status of the school bus record - current values are Inactive, Active, Archived</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.PermitClassCode">
            <summary>
            The enumerated class of School Bus from drop down
            </summary>
            <value>The enumerated class of School Bus from drop down</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.BodyTypeCode">
            <summary>
            The enumerated body type of the School Bus from drop down
            </summary>
            <value>The enumerated body type of the School Bus from drop down</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.SchoolBusSeatingCapacity">
            <summary>
            The maximum number of passengers in the bus based on the specific use of the bus including the driver. For example,  the same 2-per seat &#x2F; 24-passenger model might have a seating capacity of 36 if the specific bus is to be used for small children,  3 per seat.
            </summary>
            <value>The maximum number of passengers in the bus based on the specific use of the bus including the driver. For example,  the same 2-per seat &#x2F; 24-passenger model might have a seating capacity of 36 if the specific bus is to be used for small children,  3 per seat.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.ICBCRegistrationNumber">
            <summary>
            The registration number of the vehicle as entered by the user and confirmed by the CCW Web Services
            </summary>
            <value>The registration number of the vehicle as entered by the user and confirmed by the CCW Web Services</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.LicencePlateNumber">
            <summary>
            The License Plate Number for the vehicle
            </summary>
            <value>The License Plate Number for the vehicle</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.VehicleIdentificationNumber">
            <summary>
            A code used by the automotive industry to uniquely identify individual motor vehicles. A vehicle identification number is frequently referred to using the acronym VIN and it is occasionally referred to as a chassis number.
            </summary>
            <value>A code used by the automotive industry to uniquely identify individual motor vehicles. A vehicle identification number is frequently referred to using the acronym VIN and it is occasionally referred to as a chassis number.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.SchoolBusOwner">
            <summary>
            A foreign key reference to the system-generated unique identifier for School Bus Owner
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for School Bus Owner</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.SchoolBusOwnerId">
            <summary>
            Foreign key for SchoolBusOwner 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.PermitNumber">
            <summary>
            The (generated) permit number for the School Bus. The number is set by the system when the inspector generates a permit based on a business rule permit number format.
            </summary>
            <value>The (generated) permit number for the School Bus. The number is set by the system when the inspector generates a permit based on a business rule permit number format.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.PermitIssueDate">
            <summary>
            The date a permit number was established for this School Bus.
            </summary>
            <value>The date a permit number was established for this School Bus.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.IsOutOfProvince">
            <summary>
            True if the School Bus is registered outside of BC.
            </summary>
            <value>True if the School Bus is registered outside of BC.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.CCWJurisdiction">
            <summary>
            The Jurisdication of an Out Of Province Bus. Needed for querying CCW.
            </summary>
            <value>The Jurisdication of an Out Of Province Bus. Needed for querying CCW.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.CCWJurisdictionId">
            <summary>
            Foreign key for CCWJurisdiction 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.District">
            <summary>
            A foreign key reference to the system-generated unique identifier for a
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.DistrictId">
            <summary>
            Foreign key for District 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.HomeTerminalAddress1">
            <summary>
            Address Line 1 of physical location of the School Bus.
            </summary>
            <value>Address Line 1 of physical location of the School Bus.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.HomeTerminalAddress2">
            <summary>
            Address Line 2 of physical location of the School Bus.
            </summary>
            <value>Address Line 2 of physical location of the School Bus.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.HomeTerminalCity">
            <summary>
            City of physical location of the School Bus.
            </summary>
            <value>City of physical location of the School Bus.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.HomeTerminalCityId">
            <summary>
            Foreign key for HomeTerminalCity 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.HomeTerminalProvince">
            <summary>
            Province of physical location of the School Bus - free form.
            </summary>
            <value>Province of physical location of the School Bus - free form.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.HomeTerminalPostalCode">
            <summary>
            Postal Code of physical location of the School Bus.
            </summary>
            <value>Postal Code of physical location of the School Bus.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.HomeTerminalComment">
            <summary>
            A comment about the physical location of the bus so that the Inspector can more easily find it for an inspection.
            </summary>
            <value>A comment about the physical location of the bus so that the Inspector can more easily find it for an inspection.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.RestrictionsText">
            <summary>
            Text of any restrictions to be printed on the school bus permit. Standard comments are associated with the Permit Class but the inspector can enter free form text.
            </summary>
            <value>Text of any restrictions to be printed on the school bus permit. Standard comments are associated with the Permit Class but the inspector can enter free form text.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.NextInspectionDate">
            <summary>
            The next inspection date for this School Bus which is set when inspection results are saved
            </summary>
            <value>The next inspection date for this School Bus which is set when inspection results are saved</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.NextInspectionTypeCode">
            <summary>
            Annual or Re-inspection based on the Pass&#x2F;Fail status of the most recent inspection - An enumerated type (by the UI) to indicate the type of the next inspection
            </summary>
            <value>Annual or Re-inspection based on the Pass&#x2F;Fail status of the most recent inspection - An enumerated type (by the UI) to indicate the type of the next inspection</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.SchoolDistrict">
            <summary>
            The School District in which the School Bus operates. The school bus may or may not be associated with the School District itself - we just track where it is regardless.
            </summary>
            <value>The School District in which the School Bus operates. The school bus may or may not be associated with the School District itself - we just track where it is regardless.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.SchoolDistrictId">
            <summary>
            Foreign key for SchoolDistrict 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.IsIndependentSchool">
            <summary>
            True if the School Bus is associated with an Independent School. If true,  the name of the Independent School should be in the companion field.
            </summary>
            <value>True if the School Bus is associated with an Independent School. If true,  the name of the Independent School should be in the companion field.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.IndependentSchoolName">
            <summary>
            The name of the Independent School to which the School Bus is associated. Should be null if the companion isIndependentSchool is false.
            </summary>
            <value>The name of the Independent School to which the School Bus is associated. Should be null if the companion isIndependentSchool is false.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.UnitNumber">
            <summary>
            The unit number of the Bus as defined by the School Bus owner - freeform text.
            </summary>
            <value>The unit number of the Bus as defined by the School Bus owner - freeform text.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.MobilityAidCapacity">
            <summary>
            The number of mobility aid passenger seats in the bus.
            </summary>
            <value>The number of mobility aid passenger seats in the bus.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.Inspector">
            <summary>
            The inspector assigned to this schoolbus
            </summary>
            <value>The inspector assigned to this schoolbus</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.InspectorId">
            <summary>
            Foreign key for Inspector 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.Notes">
            <summary>
            The set of notes about the school bus entered by users.
            </summary>
            <value>The set of notes about the school bus entered by users.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.Attachments">
            <summary>
            The set of attachments about the school bus uploaded by the users.
            </summary>
            <value>The set of attachments about the school bus uploaded by the users.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.History">
            <summary>
            The history of updates made to the School Bus.
            </summary>
            <value>The history of updates made to the School Bus.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.CCWData">
            <summary>
            CCWData for this School Bus
            </summary>
            <value>CCWData for this School Bus</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.CCWDataId">
            <summary>
            Foreign key for CCWData 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBus.CCWNotifications">
            <summary>
            CCW change notifications made to the School Bus.
            </summary>
            <value>CCW change notifications made to the School Bus.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.Equals(SchoolBusAPI.Models.SchoolBus)">
            <summary>
            Returns true if SchoolBus instances are equal
            </summary>
            <param name="other">Instance of SchoolBus to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.op_Equality(SchoolBusAPI.Models.SchoolBus,SchoolBusAPI.Models.SchoolBus)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBus.op_Inequality(SchoolBusAPI.Models.SchoolBus,SchoolBusAPI.Models.SchoolBus)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.SchoolBusOwner">
            <summary>
            Demographic information about companies, organizations, school districts, or individuals who own or lease school buses
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.AddHistory(System.String,System.String)">
            <summary>
            Add a history record to the SchoolBusOwner
            </summary>
            <param name="text">text for the history entry</param>
            <param name="smUserId">Site Minder User ID for the history entry</param>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.#ctor(System.Int32,System.String,System.String,System.DateTime,SchoolBusAPI.Models.Contact,SchoolBusAPI.Models.District,System.Collections.Generic.List{SchoolBusAPI.Models.Contact},System.Collections.Generic.List{SchoolBusAPI.Models.Note},System.Collections.Generic.List{SchoolBusAPI.Models.Attachment},System.Collections.Generic.List{SchoolBusAPI.Models.History})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.SchoolBusOwner" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a SchoolBusOwner (required).</param>
            <param name="Name">The name of the School Bus owner as defined by the user&amp;#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors. (required).</param>
            <param name="Status">Status of the School Bus owner - enumerated value Active,  Inactive or Archived from drop down (required).</param>
            <param name="DateCreated">The original create date and time of the owner record. The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition. (required).</param>
            <param name="PrimaryContact">Link to the designated Primary Contact for the Inspector to the School Bus Owner organization..</param>
            <param name="District">The District to which this School Bus is affliated..</param>
            <param name="Contacts">The set of contacts related to the School Bus Owner..</param>
            <param name="Notes">The set of notes about the school bus owner entered by users..</param>
            <param name="Attachments">The set of attachments about the school bus owner uploaded by the users..</param>
            <param name="History">The history of updates made to the School Bus Owner data..</param>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.Id">
            <summary>
            A system-generated unique identifier for a SchoolBusOwner
            </summary>
            <value>A system-generated unique identifier for a SchoolBusOwner</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.Name">
            <summary>
            The name of the School Bus owner as defined by the user&#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors.
            </summary>
            <value>The name of the School Bus owner as defined by the user&#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.Status">
            <summary>
            Status of the School Bus owner - enumerated value Active,  Inactive or Archived from drop down
            </summary>
            <value>Status of the School Bus owner - enumerated value Active,  Inactive or Archived from drop down</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.DateCreated">
            <summary>
            The original create date and time of the owner record. The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition.
            </summary>
            <value>The original create date and time of the owner record. The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.PrimaryContact">
            <summary>
            Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.
            </summary>
            <value>Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.PrimaryContactId">
            <summary>
            Foreign key for PrimaryContact 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.District">
            <summary>
            The District to which this School Bus is affliated.
            </summary>
            <value>The District to which this School Bus is affliated.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.DistrictId">
            <summary>
            Foreign key for District 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.Contacts">
            <summary>
            The set of contacts related to the School Bus Owner.
            </summary>
            <value>The set of contacts related to the School Bus Owner.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.Notes">
            <summary>
            The set of notes about the school bus owner entered by users.
            </summary>
            <value>The set of notes about the school bus owner entered by users.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.Attachments">
            <summary>
            The set of attachments about the school bus owner uploaded by the users.
            </summary>
            <value>The set of attachments about the school bus owner uploaded by the users.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolBusOwner.History">
            <summary>
            The history of updates made to the School Bus Owner data.
            </summary>
            <value>The history of updates made to the School Bus Owner data.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.Equals(SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            Returns true if SchoolBusOwner instances are equal
            </summary>
            <param name="other">Instance of SchoolBusOwner to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.op_Equality(SchoolBusAPI.Models.SchoolBusOwner,SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolBusOwner.op_Inequality(SchoolBusAPI.Models.SchoolBusOwner,SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Attachment">
            <summary>
            Attachments uploaded by users about instance of entities - e.g. School Buses and School Bus Owners
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.#ctor(System.Int32,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Attachment" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for an Attachment (required).</param>
            <param name="FileName">Filename as passed by the user uploading the file.</param>
            <param name="FileContents">Binary contents of the file.</param>
            <param name="Description">A note about the attachment,  optionally maintained by the user..</param>
            <param name="Type">Type of attachment.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Attachment.Id">
            <summary>
            A system-generated unique identifier for an Attachment
            </summary>
            <value>A system-generated unique identifier for an Attachment</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Attachment.FileName">
            <summary>
            Filename as passed by the user uploading the file
            </summary>
            <value>Filename as passed by the user uploading the file</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Attachment.FileContents">
            <summary>
            Binary contents of the file
            </summary>
            <value>Binary contents of the file</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Attachment.Description">
            <summary>
            A note about the attachment,  optionally maintained by the user.
            </summary>
            <value>A note about the attachment,  optionally maintained by the user.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Attachment.Type">
            <summary>
            Type of attachment
            </summary>
            <value>Type of attachment</value>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.Equals(SchoolBusAPI.Models.Attachment)">
            <summary>
            Returns true if Attachment instances are equal
            </summary>
            <param name="other">Instance of Attachment to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.op_Equality(SchoolBusAPI.Models.Attachment,SchoolBusAPI.Models.Attachment)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Attachment.op_Inequality(SchoolBusAPI.Models.Attachment,SchoolBusAPI.Models.Attachment)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Audit">
            <summary>
            Server generated audit log
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.#ctor(System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Audit" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for an Audit (required).</param>
            <param name="AppCreateTimestamp">The date and time of the application action that created the record..</param>
            <param name="AppCreateUserid">The user account name of the application user who performed the action that created the record (e.g. JSMITH). This value is not preceded by the directory name..</param>
            <param name="AppCreateUserGuid">The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &amp;#39;IDIR&amp;#39; or &amp;#39;BCEID&amp;#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &amp;#39;ORACLE&amp;#39;. APP.</param>
            <param name="AppCreateUserDirectory">The directory in which APP_CREATE_USERID is defined. Valid values are &amp;#39;IDIR&amp;#39;, &amp;#39; BCEID&amp;#39; or &amp;#39;ORACLE&amp;#39;..</param>
            <param name="AppLastUpdateTimestamp">The date and time of the application action that created or last updated the record..</param>
            <param name="AppLastUpdateUserid">The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &amp;#39;IDIR&amp;#39; or &amp;#39;BCEID&amp;#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &amp;#39;ORACLE&amp;#39;. APP.</param>
            <param name="AppLastUpdateUserGuid">The Globally Unique Identifier of the application user who performed the action that created or last updated the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &amp;#39;IDIR&amp;#39; or &amp;#39;BCEID&amp;#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &amp;#39;ORACLE&amp;#39;..</param>
            <param name="AppLastUpdateUserDirectory">The directory in which APP_LAST_UPDATE_USERID is defined. Valid values are &amp;#39;IDIR&amp;#39;, &amp;#39; BCEID&amp;#39; or &amp;#39;ORACLE&amp;#39;..</param>
            <param name="EntityName">The name of the entity that has changed.</param>
            <param name="EntityId">The primary key in the entity that has changed.</param>
            <param name="PropertyName">The property that has changed.</param>
            <param name="OldValue">The old value.</param>
            <param name="NewValue">The new value.</param>
            <param name="IsDelete">If true the record was deleted.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.Id">
            <summary>
            A system-generated unique identifier for an Audit
            </summary>
            <value>A system-generated unique identifier for an Audit</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppCreateTimestamp">
            <summary>
            The date and time of the application action that created the record.
            </summary>
            <value>The date and time of the application action that created the record.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppCreateUserid">
            <summary>
            The user account name of the application user who performed the action that created the record (e.g. JSMITH). This value is not preceded by the directory name.
            </summary>
            <value>The user account name of the application user who performed the action that created the record (e.g. JSMITH). This value is not preceded by the directory name.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppCreateUserGuid">
            <summary>
            The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;. APP
            </summary>
            <value>The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;. APP</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppCreateUserDirectory">
            <summary>
            The directory in which APP_CREATE_USERID is defined. Valid values are &#39;IDIR&#39;, &#39; BCEID&#39; or &#39;ORACLE&#39;.
            </summary>
            <value>The directory in which APP_CREATE_USERID is defined. Valid values are &#39;IDIR&#39;, &#39; BCEID&#39; or &#39;ORACLE&#39;.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppLastUpdateTimestamp">
            <summary>
            The date and time of the application action that created or last updated the record.
            </summary>
            <value>The date and time of the application action that created or last updated the record.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppLastUpdateUserid">
            <summary>
            The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;. APP
            </summary>
            <value>The Globally Unique Identifier of the application user who performed the action that created the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;. APP</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppLastUpdateUserGuid">
            <summary>
            The Globally Unique Identifier of the application user who performed the action that created or last updated the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;.
            </summary>
            <value>The Globally Unique Identifier of the application user who performed the action that created or last updated the record. This value must be non-NULL if APP_CREATE_USER_DIRECTORY is &#39;IDIR&#39; or &#39;BCEID&#39;, but it must be NULL if APP_CREATE_USER_DIRECTORY is &#39;ORACLE&#39;.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.AppLastUpdateUserDirectory">
            <summary>
            The directory in which APP_LAST_UPDATE_USERID is defined. Valid values are &#39;IDIR&#39;, &#39; BCEID&#39; or &#39;ORACLE&#39;.
            </summary>
            <value>The directory in which APP_LAST_UPDATE_USERID is defined. Valid values are &#39;IDIR&#39;, &#39; BCEID&#39; or &#39;ORACLE&#39;.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.EntityName">
            <summary>
            The name of the entity that has changed
            </summary>
            <value>The name of the entity that has changed</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.EntityId">
            <summary>
            The primary key in the entity that has changed
            </summary>
            <value>The primary key in the entity that has changed</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.PropertyName">
            <summary>
            The property that has changed
            </summary>
            <value>The property that has changed</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.OldValue">
            <summary>
            The old value
            </summary>
            <value>The old value</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.NewValue">
            <summary>
            The new value
            </summary>
            <value>The new value</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Audit.IsDelete">
            <summary>
            If true the record was deleted
            </summary>
            <value>If true the record was deleted</value>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.Equals(SchoolBusAPI.Models.Audit)">
            <summary>
            Returns true if Audit instances are equal
            </summary>
            <param name="other">Instance of Audit to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.op_Equality(SchoolBusAPI.Models.Audit,SchoolBusAPI.Models.Audit)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Audit.op_Inequality(SchoolBusAPI.Models.Audit,SchoolBusAPI.Models.Audit)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.CCWData">
            <summary>
            Data pulled in from external sources (ICBC, NSC, etc) about School Buses and retained but not updated in the School Bus app. All data elements are simply copied from the comparable fields in the WSDLs of the Web Service Calls. The true source of the field definitions are in those other systems.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.#ctor(System.Int32,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.CCWData" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for CCWData (required).</param>
            <param name="ICBCRegistrationNumber">The Registration Number (Regi) is the link between the CCW vehicle information and a specific School Bus.</param>
            <param name="ICBCModelYear">Vehicle Year.</param>
            <param name="ICBCVehicleType">ICBC defined field - designates Commercial, Private, Other Categories.</param>
            <param name="ICBCRateClass">Defines usage such as pleasure only, business, delivery, etc...</param>
            <param name="ICBCCVIPDecal">Six monthly commercial vehicle inspection decal number.</param>
            <param name="ICBCFleetUnitNo">The owner-defined number of the bus within their bus fleet..</param>
            <param name="ICBCGrossVehicleWeight">Vehicle gross weight in kgs.</param>
            <param name="ICBCMake">Vehicle make.</param>
            <param name="ICBCBody">Vehicle body code.</param>
            <param name="ICBCRebuiltStatus">ICBC coded field about whether or not the vehicle has been rebuilt and if so the nature of the rebuilding..</param>
            <param name="ICBCCVIPExpiry">Expiry date of the last 6 month commercial vehicle inspection..</param>
            <param name="ICBCNetWt">Vehicle net weight in kgs.</param>
            <param name="ICBCModel">Vehicle model codes used by ICBC - for example bus, scbus, dump, logtr.</param>
            <param name="ICBCFuel">Fuel type gasoline, propane, diesel etc...</param>
            <param name="ICBCSeatingCapacity">Vehicle seating capacity including driver.</param>
            <param name="ICBCColour">Vehicle color ex BLU, WHI, etc...</param>
            <param name="ICBCNotesAndOrders">Notes and orders from ICBC about the vehicle..</param>
            <param name="ICBCOrderedOn">TO BE DETERMINED.</param>
            <param name="ICBCRegOwnerName">The name of the registered owner of the vehicle - per ICBC..</param>
            <param name="ICBCRegOwnerAddr1">Owners address line 1.</param>
            <param name="ICBCRegOwnerAddr2">Owners address line 2.</param>
            <param name="ICBCRegOwnerCity">Owners address city.</param>
            <param name="ICBCRegOwnerProv">Owners address Province.</param>
            <param name="ICBCRegOwnerPostalCode">Owners address Postal Code.</param>
            <param name="ICBCRegOwnerStatus">The status (as defined by ICBC) of the registered owner of the vehicle..</param>
            <param name="ICBCRegOwnerRODL">Registered Owners Driver Licence number.</param>
            <param name="ICBCRegOwnerPODL">Previous Owners Driver Licence number.</param>
            <param name="ICBCLicencePlateNumber">The License Plate Number for the vehicle.</param>
            <param name="ICBCVehicleIdentificationNumber">A code used by the automotive industry to uniquely identify individual motor vehicles. A vehicle identification number is frequently referred to using the acronym VIN and it is occasionally referred to as a chassis number..</param>
            <param name="NSCClientNum">National Safety Code Carrier Number on ICBC client system.</param>
            <param name="NSCCarrierName">National Safety Code Carrier Name on ICBC client system.</param>
            <param name="NSCCarrierConditions">Conditions imposed on the carrier (bus owner) within NSC.</param>
            <param name="NSCCarrierSafetyRating">Carrier safety rating ex - satisfatory, SAT-unaudited etc...</param>
            <param name="NSCPolicyNumber">From NSC - The number of the carrier (NSC Clients) necessary insurance required to operate the vehicle..</param>
            <param name="NSCPolicyEffectiveDate">From NSC - The effective data of the policy..</param>
            <param name="NSCPolicyStatusDate">From NSC - The date the status of the policy was established..</param>
            <param name="NSCPolicyExpiryDate">From NSC - The data of expiration of the policy..</param>
            <param name="NSCPolicyStatus">From NSC - The latest status of the policy..</param>
            <param name="NSCPlateDecal">From NSC - The plate decal as defined by NSC on the vehicle.</param>
            <param name="DateFetched">The datetime of when the record was most recently fetched from the upstream CCW service.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.Id">
            <summary>
            A system-generated unique identifier for CCWData
            </summary>
            <value>A system-generated unique identifier for CCWData</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegistrationNumber">
            <summary>
            The Registration Number (Regi) is the link between the CCW vehicle information and a specific School Bus
            </summary>
            <value>The Registration Number (Regi) is the link between the CCW vehicle information and a specific School Bus</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCModelYear">
            <summary>
            Vehicle Year
            </summary>
            <value>Vehicle Year</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCVehicleType">
            <summary>
            ICBC defined field - designates Commercial, Private, Other Categories
            </summary>
            <value>ICBC defined field - designates Commercial, Private, Other Categories</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRateClass">
            <summary>
            Defines usage such as pleasure only, business, delivery, etc..
            </summary>
            <value>Defines usage such as pleasure only, business, delivery, etc..</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCCVIPDecal">
            <summary>
            Six monthly commercial vehicle inspection decal number
            </summary>
            <value>Six monthly commercial vehicle inspection decal number</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCFleetUnitNo">
            <summary>
            The owner-defined number of the bus within their bus fleet.
            </summary>
            <value>The owner-defined number of the bus within their bus fleet.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCGrossVehicleWeight">
            <summary>
            Vehicle gross weight in kgs
            </summary>
            <value>Vehicle gross weight in kgs</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCMake">
            <summary>
            Vehicle make
            </summary>
            <value>Vehicle make</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCBody">
            <summary>
            Vehicle body code
            </summary>
            <value>Vehicle body code</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRebuiltStatus">
            <summary>
            ICBC coded field about whether or not the vehicle has been rebuilt and if so the nature of the rebuilding.
            </summary>
            <value>ICBC coded field about whether or not the vehicle has been rebuilt and if so the nature of the rebuilding.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCCVIPExpiry">
            <summary>
            Expiry date of the last 6 month commercial vehicle inspection.
            </summary>
            <value>Expiry date of the last 6 month commercial vehicle inspection.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCNetWt">
            <summary>
            Vehicle net weight in kgs
            </summary>
            <value>Vehicle net weight in kgs</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCModel">
            <summary>
            Vehicle model codes used by ICBC - for example bus, scbus, dump, logtr
            </summary>
            <value>Vehicle model codes used by ICBC - for example bus, scbus, dump, logtr</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCFuel">
            <summary>
            Fuel type gasoline, propane, diesel etc..
            </summary>
            <value>Fuel type gasoline, propane, diesel etc..</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCSeatingCapacity">
            <summary>
            Vehicle seating capacity including driver
            </summary>
            <value>Vehicle seating capacity including driver</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCColour">
            <summary>
            Vehicle color ex BLU, WHI, etc..
            </summary>
            <value>Vehicle color ex BLU, WHI, etc..</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCNotesAndOrders">
            <summary>
            Notes and orders from ICBC about the vehicle.
            </summary>
            <value>Notes and orders from ICBC about the vehicle.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCOrderedOn">
            <summary>
            TO BE DETERMINED
            </summary>
            <value>TO BE DETERMINED</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerName">
            <summary>
            The name of the registered owner of the vehicle - per ICBC.
            </summary>
            <value>The name of the registered owner of the vehicle - per ICBC.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerAddr1">
            <summary>
            Owners address line 1
            </summary>
            <value>Owners address line 1</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerAddr2">
            <summary>
            Owners address line 2
            </summary>
            <value>Owners address line 2</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerCity">
            <summary>
            Owners address city
            </summary>
            <value>Owners address city</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerProv">
            <summary>
            Owners address Province
            </summary>
            <value>Owners address Province</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerPostalCode">
            <summary>
            Owners address Postal Code
            </summary>
            <value>Owners address Postal Code</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerStatus">
            <summary>
            The status (as defined by ICBC) of the registered owner of the vehicle.
            </summary>
            <value>The status (as defined by ICBC) of the registered owner of the vehicle.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerRODL">
            <summary>
            Registered Owners Driver Licence number
            </summary>
            <value>Registered Owners Driver Licence number</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCRegOwnerPODL">
            <summary>
            Previous Owners Driver Licence number
            </summary>
            <value>Previous Owners Driver Licence number</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCLicencePlateNumber">
            <summary>
            The License Plate Number for the vehicle
            </summary>
            <value>The License Plate Number for the vehicle</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.ICBCVehicleIdentificationNumber">
            <summary>
            A code used by the automotive industry to uniquely identify individual motor vehicles. A vehicle identification number is frequently referred to using the acronym VIN and it is occasionally referred to as a chassis number.
            </summary>
            <value>A code used by the automotive industry to uniquely identify individual motor vehicles. A vehicle identification number is frequently referred to using the acronym VIN and it is occasionally referred to as a chassis number.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCClientNum">
            <summary>
            National Safety Code Carrier Number on ICBC client system
            </summary>
            <value>National Safety Code Carrier Number on ICBC client system</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCCarrierName">
            <summary>
            National Safety Code Carrier Name on ICBC client system
            </summary>
            <value>National Safety Code Carrier Name on ICBC client system</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCCarrierConditions">
            <summary>
            Conditions imposed on the carrier (bus owner) within NSC
            </summary>
            <value>Conditions imposed on the carrier (bus owner) within NSC</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCCarrierSafetyRating">
            <summary>
            Carrier safety rating ex - satisfatory, SAT-unaudited etc..
            </summary>
            <value>Carrier safety rating ex - satisfatory, SAT-unaudited etc..</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCPolicyNumber">
            <summary>
            From NSC - The number of the carrier (NSC Clients) necessary insurance required to operate the vehicle.
            </summary>
            <value>From NSC - The number of the carrier (NSC Clients) necessary insurance required to operate the vehicle.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCPolicyEffectiveDate">
            <summary>
            From NSC - The effective data of the policy.
            </summary>
            <value>From NSC - The effective data of the policy.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCPolicyStatusDate">
            <summary>
            From NSC - The date the status of the policy was established.
            </summary>
            <value>From NSC - The date the status of the policy was established.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCPolicyExpiryDate">
            <summary>
            From NSC - The data of expiration of the policy.
            </summary>
            <value>From NSC - The data of expiration of the policy.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCPolicyStatus">
            <summary>
            From NSC - The latest status of the policy.
            </summary>
            <value>From NSC - The latest status of the policy.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.NSCPlateDecal">
            <summary>
            From NSC - The plate decal as defined by NSC on the vehicle
            </summary>
            <value>From NSC - The plate decal as defined by NSC on the vehicle</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWData.DateFetched">
            <summary>
            The datetime of when the record was most recently fetched from the upstream CCW service
            </summary>
            <value>The datetime of when the record was most recently fetched from the upstream CCW service</value>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.Equals(SchoolBusAPI.Models.CCWData)">
            <summary>
            Returns true if CCWData instances are equal
            </summary>
            <param name="other">Instance of CCWData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.op_Equality(SchoolBusAPI.Models.CCWData,SchoolBusAPI.Models.CCWData)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWData.op_Inequality(SchoolBusAPI.Models.CCWData,SchoolBusAPI.Models.CCWData)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.CCWJurisdiction">
            <summary>
            The contents of the Jurisdiction table from CCW so that the user can select a Jurisdiction for passing to CCW on certain Out of Province School Bus Web Service calls
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.CCWJurisdiction" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a CCWJurisdiction (required).</param>
            <param name="JurisdictionId">The CCW system-generated unique identifier for a CCWJurisdiction. Needed for updating the table from CCW if necessary..</param>
            <param name="EffectiveDate">The effective date of the CCWJurisdiction record - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
            <param name="ExpiryDate">The end date of the CCWJurisdiction record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
            <param name="ActiveFlag">Flag from CCW indicating if the record is still active - Y indicating it is active. NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
            <param name="Code">A short version of the Jurisdiction - the familiar two-letter province or state code.</param>
            <param name="Description">The full version of the Jurisdiction name..</param>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWJurisdiction.Id">
            <summary>
            A system-generated unique identifier for a CCWJurisdiction
            </summary>
            <value>A system-generated unique identifier for a CCWJurisdiction</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWJurisdiction.JurisdictionId">
            <summary>
            The CCW system-generated unique identifier for a CCWJurisdiction. Needed for updating the table from CCW if necessary.
            </summary>
            <value>The CCW system-generated unique identifier for a CCWJurisdiction. Needed for updating the table from CCW if necessary.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWJurisdiction.EffectiveDate">
            <summary>
            The effective date of the CCWJurisdiction record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The effective date of the CCWJurisdiction record - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWJurisdiction.ExpiryDate">
            <summary>
            The end date of the CCWJurisdiction record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The end date of the CCWJurisdiction record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWJurisdiction.ActiveFlag">
            <summary>
            Flag from CCW indicating if the record is still active - Y indicating it is active. NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>Flag from CCW indicating if the record is still active - Y indicating it is active. NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWJurisdiction.Code">
            <summary>
            A short version of the Jurisdiction - the familiar two-letter province or state code
            </summary>
            <value>A short version of the Jurisdiction - the familiar two-letter province or state code</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWJurisdiction.Description">
            <summary>
            The full version of the Jurisdiction name.
            </summary>
            <value>The full version of the Jurisdiction name.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.Equals(SchoolBusAPI.Models.CCWJurisdiction)">
            <summary>
            Returns true if CCWJurisdiction instances are equal
            </summary>
            <param name="other">Instance of CCWJurisdiction to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.op_Equality(SchoolBusAPI.Models.CCWJurisdiction,SchoolBusAPI.Models.CCWJurisdiction)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.CCWJurisdiction.op_Inequality(SchoolBusAPI.Models.CCWJurisdiction,SchoolBusAPI.Models.CCWJurisdiction)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWNotification.CCWNotificationDetails">
            <summary>
            CCW change details - original and modified values
            </summary>
            <value>CCW change details - original and modified values</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWNotification.HasBeenViewed">
            <summary>
            True if the user linked to the bus has read the notification
            </summary>
            <value>True if the user linked to the inspection has read the notification</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWNotification.SchoolBus">
            <summary>
            A foreign key reference to the system-generated unique identifier for a School Bus
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a School Bus</value>
        </member>
        <member name="P:SchoolBusAPI.Models.CCWNotification.SchoolBusId">
            <summary>
            Foreign key for SchoolBus 
            </summary>   
        </member>
        <member name="T:SchoolBusAPI.Models.City">
            <summary>
            A list of cities in BC. Authoritative source to be determined.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.City.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.City.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.City" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a City (required).</param>
            <param name="Name">The name of the City.</param>
            <param name="Province">The name of the province of the city.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.City.Id">
            <summary>
            A system-generated unique identifier for a City
            </summary>
            <value>A system-generated unique identifier for a City</value>
        </member>
        <member name="P:SchoolBusAPI.Models.City.Name">
            <summary>
            The name of the City
            </summary>
            <value>The name of the City</value>
        </member>
        <member name="P:SchoolBusAPI.Models.City.Province">
            <summary>
            The name of the province of the city
            </summary>
            <value>The name of the province of the city</value>
        </member>
        <member name="M:SchoolBusAPI.Models.City.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.City.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.City.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.City.Equals(SchoolBusAPI.Models.City)">
            <summary>
            Returns true if City instances are equal
            </summary>
            <param name="other">Instance of City to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.City.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.City.op_Equality(SchoolBusAPI.Models.City,SchoolBusAPI.Models.City)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.City.op_Inequality(SchoolBusAPI.Models.City,SchoolBusAPI.Models.City)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Contact">
            <summary>
            A table of contacts related to various entities in the system. FK fields are used to link contacts to records in the system.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Contact" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a Contact (required).</param>
            <param name="GivenName">The given name of the contact..</param>
            <param name="Surname">The surname of the contact..</param>
            <param name="OrganizationName">The organization name of the contact..</param>
            <param name="Role">The role of the contact. UI controlled as to whether it is free form or selected from an enumerated list - for initial implementation, the field is freeform..</param>
            <param name="Notes">A note about the contact maintained by the users..</param>
            <param name="EmailAddress">The email address for the contact..</param>
            <param name="WorkPhoneNumber">The work phone number for the contact..</param>
            <param name="MobilePhoneNumber">The mobile phone number for the contact..</param>
            <param name="FaxPhoneNumber">The fax phone number for the contact..</param>
            <param name="Address1">Address 1 line of the address..</param>
            <param name="Address2">Address 2 line of the address..</param>
            <param name="City">The City of the address..</param>
            <param name="Province">The Province of the address..</param>
            <param name="PostalCode">The postal code of the address..</param>
            <param name="SchoolBusOwner">A foreign key reference to a system-generated unique identifier for a school bus owner</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.Id">
            <summary>
            A system-generated unique identifier for a Contact
            </summary>
            <value>A system-generated unique identifier for a Contact</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.GivenName">
            <summary>
            The given name of the contact.
            </summary>
            <value>The given name of the contact.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.Surname">
            <summary>
            The surname of the contact.
            </summary>
            <value>The surname of the contact.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.OrganizationName">
            <summary>
            The organization name of the contact.
            </summary>
            <value>The organization name of the contact.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.Role">
            <summary>
            The role of the contact. UI controlled as to whether it is free form or selected from an enumerated list - for initial implementation, the field is freeform.
            </summary>
            <value>The role of the contact. UI controlled as to whether it is free form or selected from an enumerated list - for initial implementation, the field is freeform.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.Notes">
            <summary>
            A note about the contact maintained by the users.
            </summary>
            <value>A note about the contact maintained by the users.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.EmailAddress">
            <summary>
            The email address for the contact.
            </summary>
            <value>The email address for the contact.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.WorkPhoneNumber">
            <summary>
            The work phone number for the contact.
            </summary>
            <value>The work phone number for the contact.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.MobilePhoneNumber">
            <summary>
            The mobile phone number for the contact.
            </summary>
            <value>The mobile phone number for the contact.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.FaxPhoneNumber">
            <summary>
            The fax phone number for the contact.
            </summary>
            <value>The fax phone number for the contact.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.Address1">
            <summary>
            Address 1 line of the address.
            </summary>
            <value>Address 1 line of the address.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.Address2">
            <summary>
            Address 2 line of the address.
            </summary>
            <value>Address 2 line of the address.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.City">
            <summary>
            The City of the address.
            </summary>
            <value>The City of the address.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.Province">
            <summary>
            The Province of the address.
            </summary>
            <value>The Province of the address.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.PostalCode">
            <summary>
            The postal code of the address.
            </summary>
            <value>The postal code of the address.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.SchoolBusOwner">
            <summary>
            A foreign key reference to a system-generated unique identifier for a school bus owner
            </summary>
            <value>A foreign key reference to a system-generated unique identifier for a school bus owner</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Contact.SchoolBusOwnerId">
            <summary>
            Foreign key for SchoolBus 
            </summary>   
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.Equals(SchoolBusAPI.Models.Contact)">
            <summary>
            Returns true if Contact instances are equal
            </summary>
            <param name="other">Instance of Contact to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.op_Equality(SchoolBusAPI.Models.Contact,SchoolBusAPI.Models.Contact)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Contact.op_Inequality(SchoolBusAPI.Models.Contact,SchoolBusAPI.Models.Contact)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.District">
            <summary>
            The MOTI-defined Districts - must match the official MOTI List
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.District.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.District.#ctor(System.Int32,System.Int32,System.String,SchoolBusAPI.Models.Region,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.District" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a District (required).</param>
            <param name="MinistryDistrictID">The Ministry ID for the District (required).</param>
            <param name="Name">The name of the District (required).</param>
            <param name="Region">The region in which the District is found..</param>
            <param name="StartDate">The effective date of the District record - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
            <param name="EndDate">The end date of the District record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.District.Id">
            <summary>
            A system-generated unique identifier for a District
            </summary>
            <value>A system-generated unique identifier for a District</value>
        </member>
        <member name="P:SchoolBusAPI.Models.District.MinistryDistrictID">
            <summary>
            The Ministry ID for the District
            </summary>
            <value>The Ministry ID for the District</value>
        </member>
        <member name="P:SchoolBusAPI.Models.District.Name">
            <summary>
            The name of the District
            </summary>
            <value>The name of the District</value>
        </member>
        <member name="P:SchoolBusAPI.Models.District.Region">
            <summary>
            The region in which the District is found.
            </summary>
            <value>The region in which the District is found.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.District.RegionId">
            <summary>
            Foreign key for Region 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.District.StartDate">
            <summary>
            The effective date of the District record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The effective date of the District record - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="P:SchoolBusAPI.Models.District.EndDate">
            <summary>
            The end date of the District record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The end date of the District record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="M:SchoolBusAPI.Models.District.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.District.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.District.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.District.Equals(SchoolBusAPI.Models.District)">
            <summary>
            Returns true if District instances are equal
            </summary>
            <param name="other">Instance of District to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.District.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.District.op_Equality(SchoolBusAPI.Models.District,SchoolBusAPI.Models.District)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.District.op_Inequality(SchoolBusAPI.Models.District,SchoolBusAPI.Models.District)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Email">
            <summary>
            email object
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Email.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="mailSent">see if email sent successfully</param>
            <param name="mailFrom">email address of sender</param>
            <param name="mailTo">email address of receiver</param>
            <param name="mailCc">email cc</param>
            <param name="subject">email subject</param>
            <param name="body">email body</param>
            <param name="errorInfo">error information when send email fail</param>
            <param name="userName">name of user that sending the email</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.mailSent">
            <summary>
            mailSent get set
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.mailFrom">
            <summary>
            mailFrom get set
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.mailTo">
            <summary>
            mailTo get set
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.mailCc">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.subject">
            <summary>
            subject get set
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.body">
            <summary>
            body get set
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.errorInfo">
            <summary>
            error information get set
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Email.userName">
            <summary>
            name of user who sending email
            </summary>
        </member>
        <member name="T:SchoolBusAPI.Models.Error">
            <summary>
            error object
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Error.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Construtor of error object
            </summary>
            <param name="errorTitle">error title</param>
            <param name="errorCode">error code</param>
            <param name="errorMessage">error message</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Error.errorTitle">
            <summary>
            get set error title
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Error.errorCode">
            <summary>
            get set error code
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.Error.errorMessage">
            <summary>
            get set error message
            </summary>
        </member>
        <member name="T:SchoolBusAPI.Models.Group">
            <summary>
            A named entity that is used to created a collection of users into a group. For example, the School Bus Inspectors are in the group Inspectors. Groups, like permissions are defined by the application and referenced in the code of the application.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Group" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a Group (required).</param>
            <param name="Name">The name of the group, as refenced in the code. (required).</param>
            <param name="Description">A description of the group that is presented to the user when they are setting a user into a group. (required).</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Group.Id">
            <summary>
            A system-generated unique identifier for a Group
            </summary>
            <value>A system-generated unique identifier for a Group</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Group.Name">
            <summary>
            The name of the group, as refenced in the code.
            </summary>
            <value>The name of the group, as refenced in the code.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Group.Description">
            <summary>
            A description of the group that is presented to the user when they are setting a user into a group.
            </summary>
            <value>A description of the group that is presented to the user when they are setting a user into a group.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.Equals(SchoolBusAPI.Models.Group)">
            <summary>
            Returns true if Group instances are equal
            </summary>
            <param name="other">Instance of Group to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.op_Equality(SchoolBusAPI.Models.Group,SchoolBusAPI.Models.Group)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Group.op_Inequality(SchoolBusAPI.Models.Group,SchoolBusAPI.Models.Group)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.GroupMembership">
            <summary>
            The users associated with a given group that has been defined in the application.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.#ctor(System.Int32,System.Boolean,SchoolBusAPI.Models.Group,SchoolBusAPI.Models.User)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.GroupMembership" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a GroupMembership (required).</param>
            <param name="Active">A flag indicating the User is active in the group. Set false to remove the user from the designated group. (required).</param>
            <param name="Group">A foreign key reference to the system-generated unique identifier for a Group.</param>
            <param name="User">A foreign key reference to the system-generated unique identifier for a User.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.GroupMembership.Id">
            <summary>
            A system-generated unique identifier for a GroupMembership
            </summary>
            <value>A system-generated unique identifier for a GroupMembership</value>
        </member>
        <member name="P:SchoolBusAPI.Models.GroupMembership.Active">
            <summary>
            A flag indicating the User is active in the group. Set false to remove the user from the designated group.
            </summary>
            <value>A flag indicating the User is active in the group. Set false to remove the user from the designated group.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.GroupMembership.Group">
            <summary>
            A foreign key reference to the system-generated unique identifier for a Group
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a Group</value>
        </member>
        <member name="P:SchoolBusAPI.Models.GroupMembership.GroupId">
            <summary>
            Foreign key for Group 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.GroupMembership.User">
            <summary>
            A foreign key reference to the system-generated unique identifier for a User
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a User</value>
        </member>
        <member name="P:SchoolBusAPI.Models.GroupMembership.UserId">
            <summary>
            Foreign key for User 
            </summary>   
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.Equals(SchoolBusAPI.Models.GroupMembership)">
            <summary>
            Returns true if GroupMembership instances are equal
            </summary>
            <param name="other">Instance of GroupMembership to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.op_Equality(SchoolBusAPI.Models.GroupMembership,SchoolBusAPI.Models.GroupMembership)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.GroupMembership.op_Inequality(SchoolBusAPI.Models.GroupMembership,SchoolBusAPI.Models.GroupMembership)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.History">
            <summary>
            The history of updates made to an entity - e.g. a School Bus or a School Bus Owner
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.History.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.History.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.History" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a History (required).</param>
            <param name="HistoryText">The text of the history entry tracked against the related entity. (required).</param>
        </member>
        <member name="P:SchoolBusAPI.Models.History.Id">
            <summary>
            A system-generated unique identifier for a History
            </summary>
            <value>A system-generated unique identifier for a History</value>
        </member>
        <member name="P:SchoolBusAPI.Models.History.HistoryText">
            <summary>
            The text of the history entry tracked against the related entity.
            </summary>
            <value>The text of the history entry tracked against the related entity.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.History.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.History.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.History.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.History.Equals(SchoolBusAPI.Models.History)">
            <summary>
            Returns true if History instances are equal
            </summary>
            <param name="other">Instance of History to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.History.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.History.op_Equality(SchoolBusAPI.Models.History,SchoolBusAPI.Models.History)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.History.op_Inequality(SchoolBusAPI.Models.History,SchoolBusAPI.Models.History)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Inspection">
            <summary>
            School Bus inspection details supplementary to the RIP inspection
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.#ctor(System.Int32,System.DateTime,System.String,System.String,System.DateTime,SchoolBusAPI.Models.SchoolBus,SchoolBusAPI.Models.User,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Inspection" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for an Inspection (required).</param>
            <param name="InspectionDate">The date and time the inspection was conducted. (required).</param>
            <param name="InspectionTypeCode">The type of the inspection - enumerated type of Annual or Re-inspection,  pulled from the School Bus record at the time the inspection record is created (required).</param>
            <param name="InspectionResultCode">The result of the inspection - enumerated type of Passed or Failed. The detailed results of the inspection are in RIP and not duplicated here. (required).</param>
            <param name="CreatedDate">Record creation date and time (required).</param>
            <param name="SchoolBus">A foreign key reference to the system-generated unique identifier for a School Bus.</param>
            <param name="Inspector">Defaults for a new inspection to the current user,  but can be changed as needed..</param>
            <param name="Notes">A note about the inspection independent of what goes into the RIP inspection - this is just for the School Bus application..</param>
            <param name="RIPInspectionId">The ID of the RIP inspection. The expectation is that the user will manually enter a RIP ID such that an external URL can be formed to allow the user to open the RIP inspection and see the inspection details..</param>
            <param name="PreviousNextInspectionDate">The next inspection date for the related School Bus prior to the creation of this record.</param>
            <param name="PreviousNextInspectionTypeCode">The next inspection type code for the related School Bus prior to the creation of this record.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.Id">
            <summary>
            A system-generated unique identifier for an Inspection
            </summary>
            <value>A system-generated unique identifier for an Inspection</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.InspectionDate">
            <summary>
            The date and time the inspection was conducted.
            </summary>
            <value>The date and time the inspection was conducted.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.InspectionTypeCode">
            <summary>
            The type of the inspection - enumerated type of Annual or Re-inspection,  pulled from the School Bus record at the time the inspection record is created
            </summary>
            <value>The type of the inspection - enumerated type of Annual or Re-inspection,  pulled from the School Bus record at the time the inspection record is created</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.InspectionResultCode">
            <summary>
            The result of the inspection - enumerated type of Passed or Failed. The detailed results of the inspection are in RIP and not duplicated here.
            </summary>
            <value>The result of the inspection - enumerated type of Passed or Failed. The detailed results of the inspection are in RIP and not duplicated here.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.CreatedDate">
            <summary>
            Record creation date and time
            </summary>
            <value>Record creation date and time</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.SchoolBus">
            <summary>
            A foreign key reference to the system-generated unique identifier for a School Bus
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a School Bus</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.SchoolBusId">
            <summary>
            Foreign key for SchoolBus 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.Inspector">
            <summary>
            Defaults for a new inspection to the current user,  but can be changed as needed.
            </summary>
            <value>Defaults for a new inspection to the current user,  but can be changed as needed.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.InspectorId">
            <summary>
            Foreign key for Inspector 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.Notes">
            <summary>
            A note about the inspection independent of what goes into the RIP inspection - this is just for the School Bus application.
            </summary>
            <value>A note about the inspection independent of what goes into the RIP inspection - this is just for the School Bus application.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.RIPInspectionId">
            <summary>
            The ID of the RIP inspection. The expectation is that the user will manually enter a RIP ID such that an external URL can be formed to allow the user to open the RIP inspection and see the inspection details.
            </summary>
            <value>The ID of the RIP inspection. The expectation is that the user will manually enter a RIP ID such that an external URL can be formed to allow the user to open the RIP inspection and see the inspection details.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.PreviousNextInspectionDate">
            <summary>
            The next inspection date for the related School Bus prior to the creation of this record
            </summary>
            <value>The next inspection date for the related School Bus prior to the creation of this record</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Inspection.PreviousNextInspectionTypeCode">
            <summary>
            The next inspection type code for the related School Bus prior to the creation of this record
            </summary>
            <value>The next inspection type code for the related School Bus prior to the creation of this record</value>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.Equals(SchoolBusAPI.Models.Inspection)">
            <summary>
            Returns true if Inspection instances are equal
            </summary>
            <param name="other">Instance of Inspection to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.op_Equality(SchoolBusAPI.Models.Inspection,SchoolBusAPI.Models.Inspection)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Inspection.op_Inequality(SchoolBusAPI.Models.Inspection,SchoolBusAPI.Models.Inspection)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.MetaDataExtension">
            <summary>
            Utility class used for the column comment (description) feature
            </summary>
        </member>
        <member name="P:SchoolBusAPI.Models.MetaDataExtension.Description">
            <summary>
            The PostgreSQL Comment.  Used for columns with entity framework. 
            </summary>
        </member>
        <member name="T:SchoolBusAPI.Models.Note">
            <summary>
            Notes entered by users about instance of entities - e.g. School Buses and School Bus Owners
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.#ctor(System.Int32,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Note" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a Note (required).</param>
            <param name="NoteText">The contents of the note. (required).</param>
            <param name="IsNoLongerRelevant">A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons,  but identified to other users as no longer applicable..</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Note.Id">
            <summary>
            A system-generated unique identifier for a Note
            </summary>
            <value>A system-generated unique identifier for a Note</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Note.NoteText">
            <summary>
            The contents of the note.
            </summary>
            <value>The contents of the note.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Note.IsNoLongerRelevant">
            <summary>
            A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons,  but identified to other users as no longer applicable.
            </summary>
            <value>A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons,  but identified to other users as no longer applicable.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.Equals(SchoolBusAPI.Models.Note)">
            <summary>
            Returns true if Note instances are equal
            </summary>
            <param name="other">Instance of Note to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.op_Equality(SchoolBusAPI.Models.Note,SchoolBusAPI.Models.Note)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Note.op_Inequality(SchoolBusAPI.Models.Note,SchoolBusAPI.Models.Note)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Notification">
            <summary>
            Users associated with specific notifications, created at the time the notification record is created because of the user&amp;#39;s business relationship to the bus - e.g. the user is the currently assigned inspector, or the user is the manager for the District in which the bus is located. The rules for linking a user to a notification for a specific bus could vary over time based on the needs of the business. At minimum, it is expected the current inspector assigned to a bus will be notified of every notification for that bus.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.#ctor(System.Int32,SchoolBusAPI.Models.NotificationEvent,SchoolBusAPI.Models.NotificationEvent,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,SchoolBusAPI.Models.User)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Notification" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a Notification (required).</param>
            <param name="Event">A foreign key reference to the system-generated unique identifier for a Notification Event.</param>
            <param name="Event2">A foreign key reference to the system-generated unique identifier for a Notification Event.</param>
            <param name="HasBeenViewed">True if the user linked to the inspection has read the notification.</param>
            <param name="IsWatchNotification">TO BE REMOVED.</param>
            <param name="IsExpired">TO BE REMOVED.</param>
            <param name="IsAllDay">TO BE REMOVED.</param>
            <param name="PriorityCode">TO BE REMOVED.</param>
            <param name="User">A foreign key reference to the system-generated unique identifier for a User.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.Id">
            <summary>
            A system-generated unique identifier for a Notification
            </summary>
            <value>A system-generated unique identifier for a Notification</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.Event">
            <summary>
            A foreign key reference to the system-generated unique identifier for a Notification Event
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a Notification Event</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.EventId">
            <summary>
            Foreign key for Event 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.Event2">
            <summary>
            A foreign key reference to the system-generated unique identifier for a Notification Event
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a Notification Event</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.Event2Id">
            <summary>
            Foreign key for Event2 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.HasBeenViewed">
            <summary>
            True if the user linked to the inspection has read the notification
            </summary>
            <value>True if the user linked to the inspection has read the notification</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.IsWatchNotification">
            <summary>
            TO BE REMOVED
            </summary>
            <value>TO BE REMOVED</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.IsExpired">
            <summary>
            TO BE REMOVED
            </summary>
            <value>TO BE REMOVED</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.IsAllDay">
            <summary>
            TO BE REMOVED
            </summary>
            <value>TO BE REMOVED</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.PriorityCode">
            <summary>
            TO BE REMOVED
            </summary>
            <value>TO BE REMOVED</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.User">
            <summary>
            A foreign key reference to the system-generated unique identifier for a User
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a User</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Notification.UserId">
            <summary>
            Foreign key for User 
            </summary>   
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.Equals(SchoolBusAPI.Models.Notification)">
            <summary>
            Returns true if Notification instances are equal
            </summary>
            <param name="other">Instance of Notification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.op_Equality(SchoolBusAPI.Models.Notification,SchoolBusAPI.Models.Notification)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Notification.op_Inequality(SchoolBusAPI.Models.Notification,SchoolBusAPI.Models.Notification)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.NotificationEvent">
            <summary>
            Notifications associated about changes (mostly from CCW data) to information related to a specific school bus - e.g. change of owner at ICBC, change in NSC client rating, etc.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.#ctor(System.Int32,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Boolean},SchoolBusAPI.Models.SchoolBus)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.NotificationEvent" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a NotificationEvent (required).</param>
            <param name="EventTime">The date&amp;#x2F;time of the creation of the event that triggered the creation of the notification..</param>
            <param name="EventTypeCode">A categorization of the event for which the notification was created. The categories will be defined over time in code based on the requirements of the business. An example might be &amp;quot;ICBCOwnerNameChange&amp;quot; for when a change in the CCWData ICBC Owner Name field is changed..</param>
            <param name="EventSubTypeCode">A further categorization of the event for which the notification was created..</param>
            <param name="Notes">An assembled text string about the event that triggered the notification. Includes both static text and data about the notification. User Interface code will be used (based on the eventTypeCode - category) to assemble a dynamic string of information about the event - potentially including links to other relevant data - such as link to the School Bus detail screen..</param>
            <param name="NotificationGenerated">TO BE REMOVED.</param>
            <param name="SchoolBus">A foreign key reference to the system-generated unique identifier for a School Bus.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.Id">
            <summary>
            A system-generated unique identifier for a NotificationEvent
            </summary>
            <value>A system-generated unique identifier for a NotificationEvent</value>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.EventTime">
            <summary>
            The date&#x2F;time of the creation of the event that triggered the creation of the notification.
            </summary>
            <value>The date&#x2F;time of the creation of the event that triggered the creation of the notification.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.EventTypeCode">
            <summary>
            A categorization of the event for which the notification was created. The categories will be defined over time in code based on the requirements of the business. An example might be &quot;ICBCOwnerNameChange&quot; for when a change in the CCWData ICBC Owner Name field is changed.
            </summary>
            <value>A categorization of the event for which the notification was created. The categories will be defined over time in code based on the requirements of the business. An example might be &quot;ICBCOwnerNameChange&quot; for when a change in the CCWData ICBC Owner Name field is changed.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.EventSubTypeCode">
            <summary>
            A further categorization of the event for which the notification was created.
            </summary>
            <value>A further categorization of the event for which the notification was created.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.Notes">
            <summary>
            An assembled text string about the event that triggered the notification. Includes both static text and data about the notification. User Interface code will be used (based on the eventTypeCode - category) to assemble a dynamic string of information about the event - potentially including links to other relevant data - such as link to the School Bus detail screen.
            </summary>
            <value>An assembled text string about the event that triggered the notification. Includes both static text and data about the notification. User Interface code will be used (based on the eventTypeCode - category) to assemble a dynamic string of information about the event - potentially including links to other relevant data - such as link to the School Bus detail screen.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.NotificationGenerated">
            <summary>
            TO BE REMOVED
            </summary>
            <value>TO BE REMOVED</value>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.SchoolBus">
            <summary>
            A foreign key reference to the system-generated unique identifier for a School Bus
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a School Bus</value>
        </member>
        <member name="P:SchoolBusAPI.Models.NotificationEvent.SchoolBusId">
            <summary>
            Foreign key for SchoolBus 
            </summary>   
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.Equals(SchoolBusAPI.Models.NotificationEvent)">
            <summary>
            Returns true if NotificationEvent instances are equal
            </summary>
            <param name="other">Instance of NotificationEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.op_Equality(SchoolBusAPI.Models.NotificationEvent,SchoolBusAPI.Models.NotificationEvent)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.NotificationEvent.op_Inequality(SchoolBusAPI.Models.NotificationEvent,SchoolBusAPI.Models.NotificationEvent)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Permission">
            <summary>
            The set of permissions defined in the application. Each permission is given a name and triggers some behavior defined in the application. For example, a permission might allow users to see data or to have access to functionality restricted to users without that permission. Permissions are created as needed to the application and are added to the permissions table by data migrations executed at the time the software that uses the permission is deployed.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Permission" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a Permission (required).</param>
            <param name="Code">The name of the permission referenced in the software of the application. (required).</param>
            <param name="Name">The &amp;#39;user friendly&amp;#39; name of the permission exposed to the user selecting the permissions to be included in a Role. (required).</param>
            <param name="Description">A description of the purpose of the permission and exposed to the user selecting the permissions to be included in a Role. (required).</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Permission.Id">
            <summary>
            A system-generated unique identifier for a Permission
            </summary>
            <value>A system-generated unique identifier for a Permission</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Permission.Code">
            <summary>
            The name of the permission referenced in the software of the application.
            </summary>
            <value>The name of the permission referenced in the software of the application.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Permission.Name">
            <summary>
            The &#39;user friendly&#39; name of the permission exposed to the user selecting the permissions to be included in a Role.
            </summary>
            <value>The &#39;user friendly&#39; name of the permission exposed to the user selecting the permissions to be included in a Role.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Permission.Description">
            <summary>
            A description of the purpose of the permission and exposed to the user selecting the permissions to be included in a Role.
            </summary>
            <value>A description of the purpose of the permission and exposed to the user selecting the permissions to be included in a Role.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Permission.ExpiryDate">
            <summary>
            The date on which a permission was removed.
            </summary>
            <value>The date on which a permission was removed.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.Equals(SchoolBusAPI.Models.Permission)">
            <summary>
            Returns true if Permission instances are equal
            </summary>
            <param name="other">Instance of Permission to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.op_Equality(SchoolBusAPI.Models.Permission,SchoolBusAPI.Models.Permission)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Permission.op_Inequality(SchoolBusAPI.Models.Permission,SchoolBusAPI.Models.Permission)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.Region">
            <summary>
            The MOTI-defined Regions - must match the official MOTI List
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.#ctor(System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.Region" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a Region (required).</param>
            <param name="MinistryRegionID">The Ministry ID for the Region (required).</param>
            <param name="Name">The name of the Region (required).</param>
            <param name="StartDate">The effective date of the Region record - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
            <param name="EndDate">The end date of the Region record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.Region.Id">
            <summary>
            A system-generated unique identifier for a Region
            </summary>
            <value>A system-generated unique identifier for a Region</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Region.MinistryRegionID">
            <summary>
            The Ministry ID for the Region
            </summary>
            <value>The Ministry ID for the Region</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Region.Name">
            <summary>
            The name of the Region
            </summary>
            <value>The name of the Region</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Region.StartDate">
            <summary>
            The effective date of the Region record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The effective date of the Region record - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="P:SchoolBusAPI.Models.Region.EndDate">
            <summary>
            The end date of the Region record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The end date of the Region record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.Equals(SchoolBusAPI.Models.Region)">
            <summary>
            Returns true if Region instances are equal
            </summary>
            <param name="other">Instance of Region to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.op_Equality(SchoolBusAPI.Models.Region,SchoolBusAPI.Models.Region)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.Region.op_Inequality(SchoolBusAPI.Models.Region,SchoolBusAPI.Models.Region)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.RolePermission">
            <summary>
            The collection of permissions included in a role.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.#ctor(System.Int32,SchoolBusAPI.Models.Role,SchoolBusAPI.Models.Permission)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.RolePermission" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a RolePermission (required).</param>
            <param name="Role">A foreign key reference to the system-generated unique identifier for a Role.</param>
            <param name="Permission">A foreign key reference to the system-generated unique identifier for a Permission.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.RolePermission.Id">
            <summary>
            A system-generated unique identifier for a RolePermission
            </summary>
            <value>A system-generated unique identifier for a RolePermission</value>
        </member>
        <member name="P:SchoolBusAPI.Models.RolePermission.Role">
            <summary>
            A foreign key reference to the system-generated unique identifier for a Role
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a Role</value>
        </member>
        <member name="P:SchoolBusAPI.Models.RolePermission.RoleId">
            <summary>
            Foreign key for Role 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.RolePermission.Permission">
            <summary>
            A foreign key reference to the system-generated unique identifier for a Permission
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a Permission</value>
        </member>
        <member name="P:SchoolBusAPI.Models.RolePermission.PermissionId">
            <summary>
            Foreign key for Permission 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.RolePermission.ExpiryDate">
            <summary>
            The date on which a permission previously assigned to a role was removed from that role.
            </summary>
            <value>The date on which a permission previously assigned to a role was removed from that role.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.Equals(SchoolBusAPI.Models.RolePermission)">
            <summary>
            Returns true if RolePermission instances are equal
            </summary>
            <param name="other">Instance of RolePermission to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.op_Equality(SchoolBusAPI.Models.RolePermission,SchoolBusAPI.Models.RolePermission)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.RolePermission.op_Inequality(SchoolBusAPI.Models.RolePermission,SchoolBusAPI.Models.RolePermission)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.SchoolDistrict">
            <summary>
            A list of School Districts in the Province of BC. Authoritative source to be determined.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.SchoolDistrict" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a SchoolDistrict (required).</param>
            <param name="Name">The full name of the School District (required).</param>
            <param name="ShortName">A short name for the School District useful in some areas of the UI. Usually with format \\&amp;amp;quot;SD 61\\&amp;amp;quot;. (required).</param>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolDistrict.Id">
            <summary>
            A system-generated unique identifier for a SchoolDistrict
            </summary>
            <value>A system-generated unique identifier for a SchoolDistrict</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolDistrict.Name">
            <summary>
            The full name of the School District
            </summary>
            <value>The full name of the School District</value>
        </member>
        <member name="P:SchoolBusAPI.Models.SchoolDistrict.ShortName">
            <summary>
            A short name for the School District useful in some areas of the UI. Usually with format \\&amp;quot;SD 61\\&amp;quot;.
            </summary>
            <value>A short name for the School District useful in some areas of the UI. Usually with format \\&amp;quot;SD 61\\&amp;quot;.</value>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.Equals(SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            Returns true if SchoolDistrict instances are equal
            </summary>
            <param name="other">Instance of SchoolDistrict to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.op_Equality(SchoolBusAPI.Models.SchoolDistrict,SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.SchoolDistrict.op_Inequality(SchoolBusAPI.Models.SchoolDistrict,SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.ServiceArea">
            <summary>
            The MOTI-defined Service Areas - must match the official MOTI List
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.#ctor(System.Int32,System.Int32,System.String,SchoolBusAPI.Models.District,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.ServiceArea" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a ServiceArea (required).</param>
            <param name="MinistryServiceAreaID">The Ministry ID for the Service Area (required).</param>
            <param name="Name">The name of the Service Area (required).</param>
            <param name="District">The district in which the Service Area is found..</param>
            <param name="StartDate">The effective date of the Service Area record - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
            <param name="EndDate">The end date of the Service Area record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.ServiceArea.Id">
            <summary>
            A system-generated unique identifier for a ServiceArea
            </summary>
            <value>A system-generated unique identifier for a ServiceArea</value>
        </member>
        <member name="P:SchoolBusAPI.Models.ServiceArea.MinistryServiceAreaID">
            <summary>
            The Ministry ID for the Service Area
            </summary>
            <value>The Ministry ID for the Service Area</value>
        </member>
        <member name="P:SchoolBusAPI.Models.ServiceArea.Name">
            <summary>
            The name of the Service Area
            </summary>
            <value>The name of the Service Area</value>
        </member>
        <member name="P:SchoolBusAPI.Models.ServiceArea.District">
            <summary>
            The district in which the Service Area is found.
            </summary>
            <value>The district in which the Service Area is found.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.ServiceArea.DistrictId">
            <summary>
            Foreign key for District 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.ServiceArea.StartDate">
            <summary>
            The effective date of the Service Area record - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The effective date of the Service Area record - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="P:SchoolBusAPI.Models.ServiceArea.EndDate">
            <summary>
            The end date of the Service Area record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
            </summary>
            <value>The end date of the Service Area record; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS</value>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.Equals(SchoolBusAPI.Models.ServiceArea)">
            <summary>
            Returns true if ServiceArea instances are equal
            </summary>
            <param name="other">Instance of ServiceArea to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.op_Equality(SchoolBusAPI.Models.ServiceArea,SchoolBusAPI.Models.ServiceArea)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.ServiceArea.op_Inequality(SchoolBusAPI.Models.ServiceArea,SchoolBusAPI.Models.ServiceArea)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.UserFavourite">
            <summary>
            User specific settings for a specific location in the UI. The location and saved settings are internally defined by the UI.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.#ctor(System.Int32,System.String,System.String,System.String,System.Nullable{System.Boolean},SchoolBusAPI.Models.User)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.UserFavourite" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a UserFavourite (required).</param>
            <param name="Type">The type of Favourite.</param>
            <param name="Name">The user-defined name for the recorded settings. Allows the user to save different groups of settings and access each one easily when needed..</param>
            <param name="Value">The settings saved by the user. In general,  a UI defined chunk of json that stores the settings in place when the user created the favourite..</param>
            <param name="IsDefault">True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite,  a system-wide default is invoked. On return to the context within a session,  the last parameters used are reapplied..</param>
            <param name="User">The User who has this Favourite.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.UserFavourite.Id">
            <summary>
            A system-generated unique identifier for a UserFavourite
            </summary>
            <value>A system-generated unique identifier for a UserFavourite</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserFavourite.Type">
            <summary>
            The type of Favourite
            </summary>
            <value>The type of Favourite</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserFavourite.Name">
            <summary>
            The user-defined name for the recorded settings. Allows the user to save different groups of settings and access each one easily when needed.
            </summary>
            <value>The user-defined name for the recorded settings. Allows the user to save different groups of settings and access each one easily when needed.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserFavourite.Value">
            <summary>
            The settings saved by the user. In general,  a UI defined chunk of json that stores the settings in place when the user created the favourite.
            </summary>
            <value>The settings saved by the user. In general,  a UI defined chunk of json that stores the settings in place when the user created the favourite.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserFavourite.IsDefault">
            <summary>
            True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite,  a system-wide default is invoked. On return to the context within a session,  the last parameters used are reapplied.
            </summary>
            <value>True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite,  a system-wide default is invoked. On return to the context within a session,  the last parameters used are reapplied.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserFavourite.User">
            <summary>
            The User who has this Favourite
            </summary>
            <value>The User who has this Favourite</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserFavourite.UserId">
            <summary>
            Foreign key for User 
            </summary>   
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.Equals(SchoolBusAPI.Models.UserFavourite)">
            <summary>
            Returns true if UserFavourite instances are equal
            </summary>
            <param name="other">Instance of UserFavourite to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.op_Equality(SchoolBusAPI.Models.UserFavourite,SchoolBusAPI.Models.UserFavourite)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserFavourite.op_Inequality(SchoolBusAPI.Models.UserFavourite,SchoolBusAPI.Models.UserFavourite)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Models.UserRole">
            <summary>
            A join table that provides allows each user to have any number of Roles in the system.  At login time the user is given the sum of the permissions of the roles assigned to that user.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.#ctor(System.Int32,System.DateTime,System.Nullable{System.DateTime},SchoolBusAPI.Models.Role)">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.Models.UserRole" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a UserRole (required).</param>
            <param name="EffectiveDate">The date on which the user was given the related role. (required).</param>
            <param name="ExpiryDate">The date on which a role previously assigned to a user was removed from that user..</param>
            <param name="Role">A foreign key reference to the system-generated unique identifier for a Role.</param>
        </member>
        <member name="P:SchoolBusAPI.Models.UserRole.Id">
            <summary>
            A system-generated unique identifier for a UserRole
            </summary>
            <value>A system-generated unique identifier for a UserRole</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserRole.EffectiveDate">
            <summary>
            The date on which the user was given the related role.
            </summary>
            <value>The date on which the user was given the related role.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserRole.ExpiryDate">
            <summary>
            The date on which a role previously assigned to a user was removed from that user.
            </summary>
            <value>The date on which a role previously assigned to a user was removed from that user.</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserRole.Role">
            <summary>
            A foreign key reference to the system-generated unique identifier for a Role
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a Role</value>
        </member>
        <member name="P:SchoolBusAPI.Models.UserRole.RoleId">
            <summary>
            Foreign key for Role 
            </summary>   
        </member>
        <member name="P:SchoolBusAPI.Models.UserRole.User">
            <summary>
            A foreign key reference to the system-generated unique identifier for a User
            </summary>
            <value>A foreign key reference to the system-generated unique identifier for a User</value>       
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.Equals(SchoolBusAPI.Models.UserRole)">
            <summary>
            Returns true if UserRole instances are equal
            </summary>
            <param name="other">Instance of UserRole to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.op_Equality(SchoolBusAPI.Models.UserRole,SchoolBusAPI.Models.UserRole)">
            <summary>
            Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Models.UserRole.op_Inequality(SchoolBusAPI.Models.UserRole,SchoolBusAPI.Models.UserRole)">
            <summary>
            Not Equals
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Controllers.CCWDataController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CCWDataController.#ctor(SchoolBusAPI.Services.ICCWDataService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CCWDataController.CcwdataFetchGet(System.String,System.String,System.String)">
            <summary>
            fetches data from the ICBC CCW system, and constructs a CCWData object from that.  Note that it does not perform the insert of that data into the database, only provides JSON data suitable for insertion. If a CCWData record exists in the schoolbus database then the id field will match that record, however all other data will be from the ICBC CCW system.
            </summary>
            <param name="regi">Registration Number (also known as Serial)</param>
            <param name="vin">Vehicle Identification Number</param>
            <param name="plate">License Plate String</param>
            <response code="200">OK</response>
            <response code="404">Vehicle not found in CCW system</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CCWDataController.CcwdataIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to delete</param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CCWDataController.CcwdataIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to fetch</param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CCWDataController.CcwdataIdPut(System.Int32,SchoolBusAPI.Models.CCWData)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CCWDataController.CcwdataPost(SchoolBusAPI.Models.CCWData)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">CCWData created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.CityController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CityController.#ctor(SchoolBusAPI.Services.ICityService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CityController.CitiesGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CityController.CitiesIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of City to delete</param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CityController.CitiesIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of City to fetch</param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CityController.CitiesIdPut(System.Int32,SchoolBusAPI.Models.City)">
            <summary>
            
            </summary>
            <param name="id">id of City to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CityController.CitiesPost(SchoolBusAPI.Models.City)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">City created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.ContactController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ContactController.#ctor(SchoolBusAPI.Services.IContactService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ContactController.ContactsGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ContactController.ContactsIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to delete</param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ContactController.ContactsIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to fetch</param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ContactController.ContactsIdPut(System.Int32,SchoolBusAPI.Models.Contact)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ContactController.ContactsPost(SchoolBusAPI.Models.Contact)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Contact created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.CurrentUserController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CurrentUserController.#ctor(SchoolBusAPI.Services.ICurrentUserService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CurrentUserController.UsersCurrentFavouritesIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Removes a specific user favourite</remarks>
            <param name="id">id of Favourite to delete</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CurrentUserController.UsersCurrentFavouritesPost(SchoolBusAPI.Models.UserFavourite)">
            <summary>
            
            </summary>
            <remarks>Create new favourite for the current user</remarks>
            <param name="item"></param>
            <response code="201">UserFavourite created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CurrentUserController.UsersCurrentFavouritesPut(SchoolBusAPI.Models.UserFavourite)">
            <summary>
            
            </summary>
            <remarks>Updates a favourite</remarks>
            <param name="item"></param>
            <response code="201">UserFavourite created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CurrentUserController.UsersCurrentFavouritesTypeGet(System.String)">
            <summary>
            
            </summary>
            <remarks>Returns a user&#39;s favourites of a given type.  If type is empty, returns all.</remarks>
            <param name="type">type of favourite to return</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.CurrentUserController.UsersCurrentGet">
            <summary>
            
            </summary>
            <remarks>Get the currently logged in user</remarks>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.DistrictController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.DistrictController.#ctor(SchoolBusAPI.Services.IDistrictService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.DistrictController.DistrictsGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.DistrictController.DistrictsIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of District to delete</param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.DistrictController.DistrictsIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of District to fetch</param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.DistrictController.DistrictsIdPut(System.Int32,SchoolBusAPI.Models.District)">
            <summary>
            
            </summary>
            <param name="id">id of District to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.DistrictController.DistrictsIdServiceareasGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the Service Areas for a specific region</remarks>
            <param name="id">id of District for which to fetch the ServiceAreas</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.DistrictController.DistrictsPost(SchoolBusAPI.Models.District)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">District created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.HistoryController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.HistoryController.#ctor(SchoolBusAPI.Services.IHistoryService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.HistoryController.HistoriesIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of History to delete</param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.HistoryController.HistoriesIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of History to fetch</param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.HistoryController.HistoriesIdPut(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <param name="id">id of History to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.HistoryController.HistoriesPost(SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">History created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.InspectionController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.InspectionController.#ctor(SchoolBusAPI.Services.IInspectionService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.InspectionController.InspectionsIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to delete</param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.InspectionController.InspectionsIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to fetch</param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.InspectionController.InspectionsIdPut(System.Int32,SchoolBusAPI.Models.Inspection)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.InspectionController.InspectionsPost(SchoolBusAPI.Models.Inspection)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Inspection created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.PermissionController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.PermissionController.#ctor(SchoolBusAPI.Services.IPermissionService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.PermissionController.PermissionsBulkPost(SchoolBusAPI.Models.Permission[])">
            <summary>
            
            </summary>
            <param name="items"></param>
            <response code="201">Permission created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.PermissionController.PermissionsGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.PermissionController.PermissionsIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to delete</param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.PermissionController.PermissionsIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to fetch</param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.PermissionController.PermissionsIdPut(System.Int32,SchoolBusAPI.ViewModels.PermissionViewModel)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.PermissionController.PermissionsPost(SchoolBusAPI.ViewModels.PermissionViewModel)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Permission created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.RegionController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RegionController.#ctor(SchoolBusAPI.Services.IRegionService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RegionController.RegionsGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RegionController.RegionsIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Region to delete</param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RegionController.RegionsIdDistrictsGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the districts for a specific region</remarks>
            <param name="id">id of Region for which to fetch the Districts</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RegionController.RegionsIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Region to fetch</param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RegionController.RegionsIdPut(System.Int32,SchoolBusAPI.Models.Region)">
            <summary>
            
            </summary>
            <param name="id">id of Region to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RegionController.RegionsPost(SchoolBusAPI.Models.Region)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Region created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.RoleController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.#ctor(SchoolBusAPI.Services.IRoleService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.GetRoles(System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.DeleteRole(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Role to delete</param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.GetRole(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Role to fetch</param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.GetRolePermissions(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Get all the permissions for a role</remarks>
            <param name="id">id of Role to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.UpdateRolePermissions(System.Int32,SchoolBusAPI.ViewModels.PermissionViewModel[])">
            <summary>
            
            </summary>
            <remarks>Updates the permissions for a role</remarks>
            <param name="id">id of Role to update</param>
            <param name="items"></param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.UpdateRole(System.Int32,SchoolBusAPI.ViewModels.RoleViewModel)">
            <summary>
            
            </summary>
            <param name="id">id of Role to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.RoleController.CreateRole(SchoolBusAPI.ViewModels.RoleViewModel)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Role created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.SchoolBusController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.#ctor(SchoolBusAPI.Services.ISchoolBusService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdAttachmentsGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns attachments for a particular SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch attachments for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdCcwdataGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns CCWData for a particular Schoolbus</remarks>
            <param name="id">id of SchoolBus to fetch CCWData for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to delete</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to fetch</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdHistoryGet(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <remarks>Returns History for a particular SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch History for</param>
            <param name="offset">offset for records that are returned</param>
            <param name="limit">limits the number of records returned.</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdHistoryPost(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <remarks>Add a History record to the SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch History for</param>
            <param name="item"></param>
            <response code="201">History created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdInspectionsGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to fetch Inspections for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdNewpermitPut(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Obtains a new permit number for the indicated Schoolbus.  Returns the updated SchoolBus record.</remarks>
            <param name="id">id of SchoolBus to obtain a new permit number for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdNotesGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns notes for a particular SchoolBus.</remarks>
            <param name="id">id of SchoolBus to fetch notes for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdPdfpermitGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a PDF version of the permit for the selected Schoolbus</remarks>
            <param name="id">id of SchoolBus to obtain the PDF permit for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesIdPut(System.Int32,SchoolBusAPI.Models.SchoolBus)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesPost(SchoolBusAPI.Models.SchoolBus)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">SchoolBus created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusController.SchoolbusesSearchGet(System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Searches school buses
            </summary>
            <remarks>Used for the search schoolbus page.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="inspectors">Assigned School Bus Inspectors (array of id numbers)</param>
            <param name="cities">Cities (array of id numbers)</param>
            <param name="schooldistricts">School Districts (array of id numbers)</param>
            <param name="owner"></param>
            <param name="regi">e Regi Number</param>
            <param name="vin">VIN</param>
            <param name="plate">License Plate String</param>
            <param name="includeInactive">True if Inactive schoolbuses will be returned</param>
            <param name="onlyReInspections">If true, only buses that need a re-inspection will be returned</param>
            <param name="startDate">Inspection start date</param>
            <param name="endDate">Inspection end date</param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.SchoolBusOwnerController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.#ctor(SchoolBusAPI.Services.ISchoolBusOwnerService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdAttachmentsGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns attachments for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch attachments for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBusOwner to delete</param>
            <response code="200">OK</response>
            <response code="404">SchoolBusOwner not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBusOwner to fetch</param>
            <response code="200">OK</response>
            <response code="404">SchoolBusOwner not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdHistoryGet(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <remarks>Returns History for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch History for</param>
            <param name="offset">offset for records that are returned</param>
            <param name="limit">limits the number of records returned.</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdHistoryPost(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <remarks>Add a History record to the SchoolBus Owner</remarks>
            <param name="id">id of SchoolBusOwner to add History for</param>
            <param name="item"></param>
            <response code="201">History created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdNotesGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns notes for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch notes for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdPut(System.Int32,SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBusOwner to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">SchoolBusOwner not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersIdViewGet(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns SchoolBusOwner data plus additional information required for display</remarks>
            <param name="id">id of SchoolBusOwner to fetch attachments for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersPost(SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">SchoolBusOwner created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusownersSearchGet(System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Searches school bus owners
            </summary>
            <remarks>Used for the search school bus owners.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="inspectors">Assigned School Bus Inspectors (array of id numbers)</param>
            <param name="owner"></param>
            <param name="includeInactive">True if Inactive schoolbuses will be returned</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolBusOwnerController.SchoolbusesIdInspectionsGet(System.Int32)">
            <summary>
            
            </summary>
            <param name = "id">id of school bus owner to fetch contacts</param>
            <response code = "200">OK</response>
            <response code = "404">school bus owner not found</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.SchoolDistrictController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolDistrictController.#ctor(SchoolBusAPI.Services.ISchoolDistrictService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolDistrictController.SchooldistrictsGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolDistrictController.SchooldistrictsIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolDistrict to delete</param>
            <response code="200">OK</response>
            <response code="404">SchoolDistrict not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolDistrictController.SchooldistrictsIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolDistrict to fetch</param>
            <response code="200">OK</response>
            <response code="404">SchoolDistrict not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolDistrictController.SchooldistrictsIdPut(System.Int32,SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolDistrict to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">SchoolDistrict not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SchoolDistrictController.SchooldistrictsPost(SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">SchoolDistrict created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.SendEmailController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SendEmailController.#ctor(SchoolBusAPI.Services.IEmailService)">
            <summary>
            Create a controller and set the service
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:SchoolBusAPI.Controllers.SendEmailController.EmailSend(SchoolBusAPI.Models.Email)">
            <summary>
            Controller of sending email Api request
            </summary>
            <Permission>Users with login permission in the system can send email</Permission>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Controllers.ServiceAreaController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ServiceAreaController.#ctor(SchoolBusAPI.Services.IServiceAreaService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ServiceAreaController.ServiceareasGet">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ServiceAreaController.ServiceareasIdDeletePost(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of ServiceArea to delete</param>
            <response code="200">OK</response>
            <response code="404">ServiceArea not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ServiceAreaController.ServiceareasIdGet(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of ServiceArea to fetch</param>
            <response code="200">OK</response>
            <response code="404">ServiceArea not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ServiceAreaController.ServiceareasIdPut(System.Int32,SchoolBusAPI.Models.ServiceArea)">
            <summary>
            
            </summary>
            <param name="id">id of ServiceArea to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">ServiceArea not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.ServiceAreaController.ServiceareasPost(SchoolBusAPI.Models.ServiceArea)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">ServiceArea created</response>
        </member>
        <member name="T:SchoolBusAPI.Controllers.UserController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.#ctor(SchoolBusAPI.Services.IUserService)">
            <summary>
            Create a controller and set the service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.GetUsers">
            <summary>
            
            </summary>
            <remarks>Returns all users</remarks>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.DeleteUser(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a user</remarks>
            <param name="id">id of User to delete</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.GetUser(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns data for a particular user</remarks>
            <param name="id">id of User to fetch</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.UpdateUser(System.Int32,SchoolBusAPI.ViewModels.UserViewModel)">
            <summary>
            
            </summary>
            <remarks>Updates a user</remarks>
            <param name="id">id of User to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.CreateUser(SchoolBusAPI.ViewModels.UserViewModel)">
            <summary>
            
            </summary>
            <remarks>Create new user</remarks>
            <param name="item"></param>
            <response code="201">User created</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.GetUserRoles(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the roles for a user</remarks>
            <param name="id">id of User to fetch</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.CreateUserRole(System.Int32,SchoolBusAPI.ViewModels.UserRoleViewModel)">
            <summary>
            
            </summary>
            <remarks>Adds a role to a user</remarks>
            <param name="id">id of User to update</param>
            <param name="item"></param>
            <response code="201">Role created for user</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.UpdateUserRole(System.Int32,System.Int32,SchoolBusAPI.ViewModels.UserRoleViewModel)">
            <summary>
            
            </summary>
            <remarks>Updates the role for a user</remarks>
            <param name="id">id of User to update</param>
            <param name="userRoleId">id of User Role to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Controllers.UserController.SearchUsers(System.Nullable{System.Int32}[],System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches Users
            </summary>
            <remarks>Used for the search users.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="surname"></param>
            <param name="includeInactive">True if Inactive users will be returned</param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.DbCommentsUpdater`1">
            <summary>
            Uility class used to update database column comments or descriptions.
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:SchoolBusAPI.DbCommentsUpdater`1.#ctor(`0)">
            <summary>
            Constructor. 
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SchoolBusAPI.DbCommentsUpdater`1.UpdateDatabaseDescriptions">
            <summary>
            Update the database descriptions
            </summary>
        </member>
        <member name="M:SchoolBusAPI.DbCommentsUpdater`1.SetTableDescriptions(System.Type)">
            <summary>
            Set a table comment
            </summary>
            <param name="tableType"></param>
        </member>
        <member name="M:SchoolBusAPI.DbCommentsUpdater`1.SetColumnDescription(System.String,System.String,System.String)">
            <summary>
            Set a column comment
            </summary>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <param name="description"></param>
        </member>
        <member name="M:SchoolBusAPI.DbCommentsUpdater`1.SetTableDescription(System.String,System.String)">
            <summary>
            Set a table description
            </summary>
            <param name="tableName">Name of the table</param>        
            <param name="description">Description text for the table</param>
        </member>
        <member name="T:SchoolBusAPI.DbContextTransactionWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.DbContextTransactionWrapper.Commit">
            <summary>
            Commits all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.DbContextTransactionWrapper.Rollback">
            <summary>
            Discards all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.DbContextTransactionWrapper.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting 
            unmanaged resources.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.GetDistrictByMinistryDistrictId(SchoolBusAPI.Models.IDbAppContext,System.Int32)">
            <summary>
            Returns a district for a given Ministry Id
            </summary>
            <param name="context"></param>
            <param name="id">The Ministry Id</param>
            <returns>District</returns>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.GetRegionByMinistryRegionId(SchoolBusAPI.Models.IDbAppContext,System.Int32)">
            <summary>
            Returns a region for a given Ministry Id
            </summary>
            <param name="context"></param>
            <param name="id">The Ministry Id</param>
            <returns>Region</returns>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.GetServiceAreaByMinistryServiceAreaId(SchoolBusAPI.Models.IDbAppContext,System.Int32)">
            <summary>
            Returns a service area for a given Ministry Id
            </summary>
            <param name="context"></param>
            <param name="id">The Ministry Id</param>
            <returns>Region</returns>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialCCWJurisdictionsFromFile(SchoolBusAPI.Models.IDbAppContext,System.String)">
            <summary>
            Adds initial CCWJurisdictions from a file
            </summary>
            <param name="context"></param>
            <param name="CCWJurisdictionJsonPath"></param>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialCCWJurisdiction(SchoolBusAPI.Models.IDbAppContext,SchoolBusAPI.Models.CCWJurisdiction)">
            <summary>
            Adds a CCWJurisdiction to the system, only if it does not exist.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialUsersFromFile(SchoolBusAPI.Models.IDbAppContext,System.String)">
            <summary>
            Adds initial users from a specified file
            </summary>
            <param name="context"></param>
            <param name="userJsonPath"></param>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialUsers(SchoolBusAPI.Models.IDbAppContext,System.String)">
            <summary>
            Adds initial users from a specified json string
            </summary>
            <param name="context"></param>
            <param name="userJson"></param>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialUsers(SchoolBusAPI.Models.IDbAppContext,System.Collections.Generic.List{SchoolBusAPI.Models.User})">
            <summary>
            Adds initial users from a list of users
            </summary>
            <param name="context"></param>
            <param name="users"></param>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialUser(SchoolBusAPI.Models.IDbAppContext,SchoolBusAPI.Models.User)">
            <summary>
            Adds a user to the system, only if they do not exist.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialRegion(SchoolBusAPI.Models.IDbAppContext,SchoolBusAPI.Models.Region)">
            <summary>
            Adds a region to the system, only if it does not exist.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialDistrictsFromFile(SchoolBusAPI.Models.IDbAppContext,System.String)">
            <summary>
            Adds initial districts from a file
            </summary>
            <param name="context"></param>
            <param name="districtJsonPath"></param>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialDistrict(SchoolBusAPI.Models.IDbAppContext,SchoolBusAPI.Models.District)">
            <summary>
            Adds a district to the system, only if it does not exist.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.AddInitialServiceArea(SchoolBusAPI.Models.IDbAppContext,SchoolBusAPI.Models.ServiceArea)">
            <summary>
            Adds a service area to the system, only if it does not exist.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Extensions.IDbAppContextExtensions.UpdateSeedCCWJurisdictionInfo(SchoolBusAPI.Models.DbAppContext,SchoolBusAPI.Models.CCWJurisdiction)">
            <summary>
            Update a seed item
            </summary>
            <param name="context"></param>
            <param name="item"></param>
        </member>
        <member name="T:SchoolBusAPI.Extensions.ServiceCollectionExtensions">
            <summary>
            Utility extension added to aspnet core to facilitate registration of application-specific services
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Extensions.ServiceCollectionExtensions.RegisterApplicationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds application-specific services to the dependency injection container in aspnet core.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Hangfire.CcwJobService.PopulateCCWJob">
            <summary>
            Hangfire job to populate CCW data.  Only used for a deploy to PROD with a new database.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Hangfire.CcwJobService.UpdateCCWJob">
            <summary>
            Hangfire job to refresh existing data.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Helpers.CsvArrayBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Converts comma separated values into a typed array.
            </summary>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Program">
            <summary>
            The main Program for the application.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.CCWJurisdictionSeeder.GetDefaultCCWJurisdictions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in all environments.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.CCWJurisdictionSeeder.GetDevCCWJurisdictions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Development environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.CCWJurisdictionSeeder.GetTestCCWJurisdictions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Test environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.CCWJurisdictionSeeder.GetProdCCWJurisdictions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Production environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.DistrictSeeder.GetDefaultDistricts(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in all environments.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.DistrictSeeder.GetDevDistricts(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Development environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.DistrictSeeder.GetTestDistricts(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Test environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.DistrictSeeder.GetProdDistricts(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Production environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.RegionSeeder.GetDefaultRegions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in all environments.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.RegionSeeder.GetDevRegions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Development environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.RegionSeeder.GetTestRegions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Test environment.
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Seeders.RegionSeeder.GetProdRegions(SchoolBusAPI.Models.DbAppContext)">
            <summary>
            Returns a list of users to be populated in the Production environment.
            </summary>
        </member>
        <member name="T:SchoolBusAPI.Seeders.SeedFactory`1">
            <summary>
            This class automattically loades all seeder classes defined in this assembly,
            and provides a simple interface for seeding the application and database with data.
            </summary>
        </member>
        <member name="T:SchoolBusAPI.Services.ICCWDataService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ICCWDataService.CcwdataBulkPostAsync(SchoolBusAPI.Models.CCWData[])">
            <summary>
            
            </summary>
            <param name="items"></param>
            <response code="201">CCWData created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICCWDataService.CcwdataFetchGetAsync(System.String,System.String,System.String)">
            <summary>
            fetches data from the ICBC CCW system, and constructs a CCWData object from that.  Note that it does not perform the insert of that data into the database, only provides JSON data suitable for insertion. If a CCWData record exists in the schoolbus database then the id field will match that record, however all other data will be from the ICBC CCW system.
            </summary>
            <param name="regi">Registration Number (also known as Serial)</param>
            <param name="vin">Vehicle Identification Number</param>
            <param name="plate">License Plate String</param>
            <response code="200">OK</response>
            <response code="404">Vehicle not found in CCW system</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICCWDataService.CcwdataIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to delete</param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICCWDataService.CcwdataIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to fetch</param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICCWDataService.CcwdataIdPutAsync(System.Int32,SchoolBusAPI.Models.CCWData)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICCWDataService.CcwdataPostAsync(SchoolBusAPI.Models.CCWData)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">CCWData created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICCWDataService.GetCCW(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get CCW data from CCW web service and update DB from the returned data
            </summary>
            <param name="regi"></param>
            <param name="plate"></param>
            <param name="vin"></param>
            <param name="userId"></param>
            <param name="guid"></param>
            <param name="directory"></param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Services.CCWDataService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Configuration.IConfiguration,SchoolBusAPI.Models.DbAppContext,SchoolBusCcw.ICCWService,Microsoft.Extensions.Logging.ILogger{SchoolBusAPI.Services.CCWDataService},AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.CcwdataBulkPostAsync(SchoolBusAPI.Models.CCWData[])">
            <summary>
            
            </summary>
            <param name="items"></param>
            <response code="201">CCWData created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.CcwdataFetchGetAsync(System.String,System.String,System.String)">
            <summary>
            fetches data from the ICBC CCW system, and constructs a CCWData object from that.  Note that it does not perform the insert of that data into the database, only provides JSON data suitable for insertion. If a CCWData record exists in the schoolbus database then the id field will match that record, however all other data will be from the ICBC CCW system.
            </summary>
            <param name="regi">Registration Number (also known as Serial)</param>
            <param name="vin">Vehicle Identification Number</param>
            <param name="plate">License Plate String</param>
            <response code="200">OK</response>
            <response code="404">Vehicle not found in CCW system</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.SanitizeInt(System.String)">
            <summary>
            Utility function to convert strings to nullable int.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.CcwdataIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to delete</param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.CcwdataIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to fetch</param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.CcwdataIdPutAsync(System.Int32,SchoolBusAPI.Models.CCWData)">
            <summary>
            
            </summary>
            <param name="id">id of CCWData to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">CCWData not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CCWDataService.CcwdataPostAsync(SchoolBusAPI.Models.CCWData)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">CCWData created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.ICityService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ICityService.CitiesGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICityService.CitiesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of City to delete</param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICityService.CitiesIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of City to fetch</param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICityService.CitiesIdPutAsync(System.Int32,SchoolBusAPI.Models.City)">
            <summary>
            
            </summary>
            <param name="id">id of City to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICityService.CitiesPostAsync(SchoolBusAPI.Models.City)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">City created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.CityService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.CityService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.CityService.CitiesGetAsync">
            <summary>
            
            </summary>
            <remarks>Returns a list of cities</remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CityService.CitiesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a City</remarks>
            <param name="id">id of City to delete</param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CityService.CitiesIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a specific City by ID</remarks>
            <param name="id">id of City to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CityService.CitiesIdPutAsync(System.Int32,SchoolBusAPI.Models.City)">
            <summary>
            
            </summary>
            <remarks>Updates a City</remarks>
            <param name="id">id of City to update</param>
            <param name="body"></param>
            <response code="200">OK</response>
            <response code="404">City not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CityService.CitiesPostAsync(SchoolBusAPI.Models.City)">
            <summary>
            
            </summary>
            <remarks>Adds a City</remarks>
            <param name="body"></param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IContactService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IContactService.ContactsGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IContactService.ContactsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to delete</param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IContactService.ContactsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to fetch</param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IContactService.ContactsIdPutAsync(System.Int32,SchoolBusAPI.Models.Contact)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IContactService.ContactsPostAsync(SchoolBusAPI.Models.Contact)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Contact created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.ContactService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ContactService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,SchoolBusAPI.Models.DbAppContext,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ContactService.ContactsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to delete</param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ContactService.ContactsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to fetch</param>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ContactService.ContactsGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ContactService.ContactsIdPutAsync(System.Int32,SchoolBusAPI.Models.Contact)">
            <summary>
            
            </summary>
            <param name="id">id of Contact to fetch</param>
            <param name="body">object of contact to be updated</param>>
            <response code="200">OK</response>
            <response code="404">Contact not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ContactService.ContactsPostAsync(SchoolBusAPI.Models.Contact)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">contact create</response>
        </member>
        <member name="T:SchoolBusAPI.Services.ICurrentUserService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ICurrentUserService.UsersCurrentFavouritesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Removes a specific user favourite</remarks>
            <param name="id">id of Favourite to delete</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICurrentUserService.UsersCurrentFavouritesPostAsync(SchoolBusAPI.Models.UserFavourite)">
            <summary>
            
            </summary>
            <remarks>Create new favourite for the current user</remarks>
            <param name="item"></param>
            <response code="201">UserFavourite created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICurrentUserService.UsersCurrentFavouritesPutAsync(SchoolBusAPI.Models.UserFavourite)">
            <summary>
            
            </summary>
            <remarks>Updates a favourite</remarks>
            <param name="item"></param>
            <response code="201">UserFavourite created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICurrentUserService.UsersCurrentFavouritesTypeGetAsync(System.String)">
            <summary>
            
            </summary>
            <remarks>Returns a user&#39;s favourites of a given type.  If type is empty, returns all.</remarks>
            <param name="type">type of favourite to return</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ICurrentUserService.UsersCurrentGetAsync">
            <summary>
            
            </summary>
            <remarks>Get the currently logged in user</remarks>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.CurrentUserService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.CurrentUserService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,SchoolBusAPI.Models.DbAppContext,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.CurrentUserService.UsersCurrentFavouritesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Removes a specific user favourite</remarks>
            <param name="id">id of Favourite to delete</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CurrentUserService.UsersCurrentFavouritesPostAsync(SchoolBusAPI.Models.UserFavourite)">
            <summary>
            
            </summary>
            <remarks>Create new favourite for the current user</remarks>
            <param name="item"></param>
            <response code="201">UserFavourite created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CurrentUserService.UsersCurrentFavouritesPutAsync(SchoolBusAPI.Models.UserFavourite)">
            <summary>
            
            </summary>
            <remarks>Updates a favourite</remarks>
            <param name="item"></param>
            <response code="201">UserFavourite created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CurrentUserService.UsersCurrentFavouritesTypeGetAsync(System.String)">
            <summary>
            
            </summary>
            <remarks>Returns a user&#39;s favourites of a given type.  If type is empty, returns all.</remarks>
            <param name="type">type of favourite to return</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.CurrentUserService.UsersCurrentGetAsync">
            <summary>
            
            </summary>
            <remarks>Get the currently logged in user</remarks>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IDistrictService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IDistrictService.DistrictsGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IDistrictService.DistrictsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of District to delete</param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IDistrictService.DistrictsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of District to fetch</param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IDistrictService.DistrictsIdPutAsync(System.Int32,SchoolBusAPI.Models.District)">
            <summary>
            
            </summary>
            <param name="id">id of District to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IDistrictService.DistrictsIdServiceareasGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the Service Areas for a specific region</remarks>
            <param name="id">id of District for which to fetch the ServiceAreas</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IDistrictService.DistrictsPostAsync(SchoolBusAPI.Models.District)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">District created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.DistrictService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.DistrictService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.DistrictService.DistrictsGetAsync">
            <summary>
            
            </summary>
            <remarks>Returns a list of available districts</remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.DistrictService.DistrictsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a district</remarks>
            <param name="id">id of District to delete</param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.DistrictService.DistrictsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a specific district</remarks>
            <param name="id">id of Districts to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.DistrictService.DistrictsIdPutAsync(System.Int32,SchoolBusAPI.Models.District)">
            <summary>
            
            </summary>
            <remarks>Updates a district</remarks>
            <param name="id">id of District to update</param>
            <param name="body"></param>
            <response code="200">OK</response>
            <response code="404">District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.DistrictService.DistrictsIdServiceareasGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the Service Areas for a specific region</remarks>
            <param name="id">id of District for which to fetch the ServiceAreas</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.DistrictService.DistrictsPostAsync(SchoolBusAPI.Models.District)">
            <summary>
            
            </summary>
            <remarks>Adds a district</remarks>
            <param name="body"></param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IEmailService">
            <summary>
            Interface of email service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IEmailService.EmailSend(SchoolBusAPI.Models.Email)">
            <summary>
            send email
            </summary>
            <param name="mail">email object</param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Services.EmailService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.EmailService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{SchoolBusAPI.Services.EmailService})">
            <summary>
            Create a email service
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.EmailService.EmailSend(SchoolBusAPI.Models.Email)">
            <summary>
            
            </summary>
            <param name="email">email object get from front-end</param>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Services.IHistoryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IHistoryService.HistoriesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of History to delete</param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IHistoryService.HistoriesIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of History to fetch</param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IHistoryService.HistoriesIdPutAsync(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <param name="id">id of History to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IHistoryService.HistoriesPostAsync(SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">History created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.HistoryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.HistoryService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.HistoryService.HistoriesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of History to delete</param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.HistoryService.HistoriesIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of History to fetch</param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.HistoryService.HistoriesIdPutAsync(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <param name="id">id of History</param>
            <param name="body">body of History</param>
            <response code="200">OK</response>
            <response code="404">History not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.HistoryService.HistoriesPostAsync(SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <param name="body"></param>
            <response code="201">History created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IInspectionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IInspectionService.InspectionsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to delete</param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IInspectionService.InspectionsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to fetch</param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IInspectionService.InspectionsIdPutAsync(System.Int32,SchoolBusAPI.Models.Inspection)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IInspectionService.InspectionsPostAsync(SchoolBusAPI.Models.Inspection)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Inspection created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.InspectionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.InspectionService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,SchoolBusAPI.Models.DbAppContext,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.InspectionService.InspectionsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to delete</param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.InspectionService.InspectionsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection to fetch</param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.InspectionService.InspectionsIdPutAsync(System.Int32,SchoolBusAPI.Models.Inspection)">
            <summary>
            
            </summary>
            <param name="id">id of Inspection</param>
            <param name="item">item of Inspection</param>
            <response code="200">OK</response>
            <response code="404">Inspection not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.InspectionService.InspectionsPostAsync(SchoolBusAPI.Models.Inspection)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Inspection created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IPermissionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IPermissionService.PermissionsBulkPostAsync(SchoolBusAPI.Models.Permission[])">
            <summary>
            
            </summary>
            <param name="items"></param>
            <response code="201">Permission created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IPermissionService.PermissionsGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IPermissionService.PermissionsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to delete</param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IPermissionService.PermissionsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to fetch</param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IPermissionService.PermissionsIdPutAsync(System.Int32,SchoolBusAPI.ViewModels.PermissionViewModel)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IPermissionService.PermissionsPostAsync(SchoolBusAPI.ViewModels.PermissionViewModel)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Permission created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.PermissionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.PermissionService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.PermissionService.PermissionsBulkPostAsync(SchoolBusAPI.Models.Permission[])">
            <summary>
            
            </summary>
            <param name="items"></param>
            <response code="201">Permissions created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.PermissionService.PermissionsGetAsync">
            <summary>
            
            </summary>
            <remarks>Returns a collection of active permissions</remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.PermissionService.PermissionsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to delete</param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.PermissionService.PermissionsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a permission</remarks>
            <param name="id">id of Permission to fetch</param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.PermissionService.PermissionsIdPutAsync(System.Int32,SchoolBusAPI.ViewModels.PermissionViewModel)">
            <summary>
            
            </summary>
            <param name="id">id of Permission to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Permission not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.PermissionService.PermissionsPostAsync(SchoolBusAPI.ViewModels.PermissionViewModel)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Permission created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IRegionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IRegionService.RegionsGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRegionService.RegionsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Region to delete</param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRegionService.RegionsIdDistrictsGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the districts for a specific region</remarks>
            <param name="id">id of Region for which to fetch the Districts</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRegionService.RegionsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Region to fetch</param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRegionService.RegionsIdPutAsync(System.Int32,SchoolBusAPI.Models.Region)">
            <summary>
            
            </summary>
            <param name="id">id of Region to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRegionService.RegionsPostAsync(SchoolBusAPI.Models.Region)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Region created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.RegionService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.RegionService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.RegionService.RegionsGetAsync">
            <summary>
            
            </summary>
            <remarks>Returns a list of available regions</remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RegionService.RegionsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a region</remarks>
            <param name="id">id of Region to delete</param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RegionService.RegionsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a specific region</remarks>
            <param name="id">id of Regions to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RegionService.RegionsIdDistrictsGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a list of LocalAreas for a given region</remarks>
            <param name="id">id of Region to fetch SchoolDistricts for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RegionService.RegionsIdPutAsync(System.Int32,SchoolBusAPI.Models.Region)">
            <summary>
            
            </summary>
            <remarks>Updates a region</remarks>
            <param name="id">id of Region to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Region not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RegionService.RegionsPostAsync(SchoolBusAPI.Models.Region)">
            <summary>
            
            </summary>
            <remarks>Adds a region</remarks>
            <param name="item"></param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IRoleService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IRoleService.GetRoles(System.Boolean)">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRoleService.DeleteRole(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Role to delete</param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRoleService.GetRole(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Role to fetch</param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRoleService.GetRolePermissions(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Get all the permissions for a role</remarks>
            <param name="id">id of Role to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRoleService.UpdateRolePermissions(System.Int32,SchoolBusAPI.ViewModels.PermissionViewModel[])">
            <summary>
            
            </summary>
            <remarks>Updates the permissions for a role</remarks>
            <param name="id">id of Role to update</param>
            <param name="items"></param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRoleService.UpdateRole(System.Int32,SchoolBusAPI.ViewModels.RoleViewModel)">
            <summary>
            
            </summary>
            <param name="id">id of Role to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IRoleService.CreateRole(SchoolBusAPI.ViewModels.RoleViewModel)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Role created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.RoleService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.GetRoles(System.Boolean)">
            <summary>
            
            </summary>
            <remarks>Returns a collection of active roles</remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.DeleteRole(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Role to delete</param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.GetRole(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of Role to fetch</param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.GetRolePermissions(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Get all the permissions for a role</remarks>
            <param name="id">id of Role to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.UpdateRolePermissions(System.Int32,SchoolBusAPI.ViewModels.PermissionViewModel[])">
            <summary>
            
            </summary>
            <remarks>Updates the permissions for a role</remarks>
            <param name="id">id of Role to update</param>
            <param name="items"></param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.UpdateRole(System.Int32,SchoolBusAPI.ViewModels.RoleViewModel)">
            <summary>
            
            </summary>
            <param name="id">id of Role to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">Role not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.RoleService.CreateRole(SchoolBusAPI.ViewModels.RoleViewModel)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">Role created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.ISchoolBusOwnerService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdAttachmentsGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns attachments for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch attachments for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBusOwner to delete</param>
            <response code="200">OK</response>
            <response code="404">SchoolBusOwner not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBusOwner to fetch</param>
            <response code="200">OK</response>
            <response code="404">SchoolBusOwner not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdHistoryGetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <remarks>Returns History for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch History for</param>
            <param name="offset">offset for records that are returned</param>
            <param name="limit">limits the number of records returned.</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdHistoryPostAsync(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <remarks>Add a History record to the SchoolBus Owner</remarks>
            <param name="id">id of SchoolBusOwner to add History for</param>
            <param name="item"></param>
            <response code="201">History created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdNotesGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns notes for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch notes for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdPutAsync(System.Int32,SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBusOwner to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">SchoolBusOwner not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersIdViewGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns SchoolBusOwner data plus additional information required for display</remarks>
            <param name="id">id of SchoolBusOwner to fetch attachments for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersPostAsync(SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">SchoolBusOwner created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbusownersSearchGetAsync(System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Searches school bus owners
            </summary>
            <remarks>Used for the search school bus owners.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="inspectors">Assigned School Bus Inspectors (array of id numbers)</param>
            <param name="owner"></param>
            <param name="includeInactive">True if Inactive schoolbuses will be returned</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusOwnerService.SchoolbuseownersIdContactsGetAsync(System.Int32)">
            <summary>
            id of school bus owner for fetch contacts
            </summary>
            <param name="id">id of school bus owner to fetch contacts</param>
            <response code="200">OK</response>
            <response code="404">school bus owner not found</response>
        </member>
        <member name="T:SchoolBusAPI.Services.SchoolBusOwnerService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersIdAttachmentsGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns attachments for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch attachments for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersIdHistoryGetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns History for a particular SchoolBusOwner
            </summary>
            <param name="id"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersIdNotesGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns notes for a particular SchoolBusOwner</remarks>
            <param name="id">id of SchoolBusOwner to fetch notes for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersIdPutAsync(System.Int32,SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBusOwner to fetch</param>
            <param name="body">object of modified SchoolBusOwner</param>>
            <response code="200">OK</response>
            <response code="404">SchoolBusOwner not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.GetNextInspectionDate(System.Int32)">
            <summary>
            Utility function used by the owner view service
            </summary>
            <param name="schoolBusOwnerId">Owner for which to lookup inspections</param>
            <returns>Date of next inspection, or null if there is none</returns>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.GetNumberSchoolBuses(System.Int32)">
            <summary>
            Utility function used by the owner view service
            </summary>
            <param name="schoolBusOwnerId">Owner for which to lookup school buses</param>
            <returns>Number of associated school buses</returns>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersIdViewGetAsync(System.Int32)">
            <summary>
            View service used by the view school bus owner page
            </summary>
            <param name="id">SchoolBusOwner Id</param>
            <returns>A SchoolBusOwnerViewModel, or 404 if the record does not exist</returns>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersPostAsync(SchoolBusAPI.Models.SchoolBusOwner)">
            <summary>
            
            </summary>
            <param name="body"></param>
            <response code="201">SchoolBusOwner created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbusownersSearchGetAsync(System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Searches school bus owners
            </summary>
            <remarks>Used for the search school bus owners.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="inspectors">Assigned School Bus Inspectors (array of id numbers)</param>
            <param name="owner"></param>
            <param name="includeInactive">True if Inactive schoolbuses will be returned</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusOwnerService.SchoolbuseownersIdContactsGetAsync(System.Int32)">
            <param name="id">id of SchoolBus to fetch Inspections for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="T:SchoolBusAPI.Services.ISchoolBusService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdAttachmentsGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns attachments for a particular SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch attachments for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdCcwdataGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns CCWData for a particular Schoolbus</remarks>
            <param name="id">id of SchoolBus to fetch CCWData for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to delete</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to fetch</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdHistoryGetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <remarks>Returns History for a particular SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch History for</param>
            <param name="offset">offset for records that are returned</param>
            <param name="limit">limits the number of records returned.</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdHistoryPostAsync(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <remarks>Add a History record to the SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch History for</param>
            <param name="item"></param>
            <response code="201">History created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdInspectionsGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to fetch Inspections for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdNewpermitPutAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Obtains a new permit number for the indicated Schoolbus.  Returns the updated SchoolBus record.</remarks>
            <param name="id">id of SchoolBus to obtain a new permit number for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdNotesGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns notes for a particular SchoolBus.</remarks>
            <param name="id">id of SchoolBus to fetch notes for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdPdfpermitGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a PDF version of the permit for the selected Schoolbus</remarks>
            <param name="id">id of SchoolBus to obtain the PDF permit for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesIdPutAsync(System.Int32,SchoolBusAPI.Models.SchoolBus)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolBus to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesPostAsync(SchoolBusAPI.Models.SchoolBus)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">SchoolBus created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolBusService.SchoolbusesSearchGetAsync(System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Searches school buses
            </summary>
            <remarks>Used for the search schoolbus page.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="inspectors">Assigned School Bus Inspectors (array of id numbers)</param>
            <param name="cities">Cities (array of id numbers)</param>
            <param name="schooldistricts">School Districts (array of id numbers)</param>
            <param name="owner"></param>
            <param name="regi">e Regi Number</param>
            <param name="vin">VIN</param>
            <param name="plate">License Plate String</param>
            <param name="includeInactive">True if Inactive schoolbuses will be returned</param>
            <param name="onlyReInspections">If true, only buses that need a re-inspection will be returned</param>
            <param name="startDate">Inspection start date</param>
            <param name="endDate">Inspection end date</param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.SchoolBusService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.Extensions.Configuration.IConfiguration,SchoolBusAPI.Models.DbAppContext,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{SchoolBusAPI.Services.SchoolBusService})">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.AdjustSchoolBus(SchoolBusAPI.Models.SchoolBus)">
            <summary>
            Adjust a SchoolBus item to ensure child object data is in place correctly
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdGetAsync(System.Int32)">
            <summary>
            Returns a single school bus object
            </summary>
            <remarks></remarks>
            <param name="id">Id of SchoolBus to fetch</param>
            <response code="200">OK</response>
            <response code="404">Not Found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesGetAsync">
            <summary>
            Returns a collection of school buses
            </summary>
            <remarks></remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdAttachmentsGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns attachments for a particular SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch attachments for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdCcwdataGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns CCWData for a particular Schoolbus</remarks>
            <param name="id">id of SchoolBus to fetch CCWData for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>        
            <param name="id">id of SchoolBus to delete</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdHistoryGetAsync(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Returns History for a particular SchoolBus
            </summary>
            <param name="id"></param>
            <param name="offset"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdHistoryPostAsync(System.Int32,SchoolBusAPI.Models.History)">
            <summary>
            
            </summary>
            <remarks>Add a History record to the SchoolBus</remarks>
            <param name="id">id of SchoolBus to fetch History for</param>
            <param name="item"></param>
            <response code="201">History created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdNotesGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns notes for a particular SchoolBus.</remarks>
            <param name="id">id of SchoolBus to fetch notes for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdPdfpermitGetAsync(System.Int32)">
            <summary>
            Returns a PDF Permit
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdPutAsync(System.Int32,SchoolBusAPI.Models.SchoolBus)">
            <summary>
            Updates a single school bus object
            </summary>
            <param name="id"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesPostAsync(SchoolBusAPI.Models.SchoolBus)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">SchoolBus created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdInspectionsGetAsync(System.Int32)">
            <param name="id">id of SchoolBus to fetch Inspections for</param>
            <response code="200">OK</response>
            <response code="404">SchoolBus not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesIdNewpermitPutAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Obtains a new permit number for the indicated Schoolbus.  Returns the updated SchoolBus record.</remarks>
            <param name="id">id of SchoolBus to obtain a new permit number for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolBusService.SchoolbusesSearchGetAsync(System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32}[],System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Searches school buses
            </summary>
            <remarks>Used for the search schoolbus page.</remarks>        
            <param name="districts">Districts (array of id numbers)</param>
            <param name="inspectors">Assigned School Bus Inspectors (array of id numbers)</param>
            <param name="cities">Cities (array of id numbers)</param>
            <param name="schooldistricts">School Districts (array of id numbers)</param>
            <param name="owner"></param>
            <param name="regi">e Regi Number</param>
            <param name="vin">VIN</param>
            <param name="plate">License Plate String</param>
            <param name="includeInactive">True if Inactive schoolbuses will be returned</param>
            <param name="onlyReInspections">If true, only buses that need a re-inspection will be returned</param>
            <param name="startDate">Inspection start date</param>
            <param name="endDate">Inspection end date</param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.ISchoolDistrictService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolDistrictService.SchooldistrictsGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolDistrictService.SchooldistrictsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolDistrict to delete</param>
            <response code="200">OK</response>
            <response code="404">SchoolDistrict not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolDistrictService.SchooldistrictsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolDistrict to fetch</param>
            <response code="200">OK</response>
            <response code="404">SchoolDistrict not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolDistrictService.SchooldistrictsIdPutAsync(System.Int32,SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            
            </summary>
            <param name="id">id of SchoolDistrict to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">SchoolDistrict not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ISchoolDistrictService.SchooldistrictsPostAsync(SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">SchoolDistrict created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.SchoolDistrictService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolDistrictService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolDistrictService.SchooldistrictsIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a list of SchoolDistricts for a given region</remarks>
            <param name="id">id of Region to fetch SchoolDistricts for</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolDistrictService.SchooldistrictsGetAsync">
            <summary>
            
            </summary>
            <remarks>Returns a list of available schooldistricts</remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolDistrictService.SchooldistrictsIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a School District</remarks>
            <param name="id">id of School District to delete</param>
            <response code="200">OK</response>
            <response code="404">School District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolDistrictService.SchooldistrictsIdPutAsync(System.Int32,SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            
            </summary>
            <remarks>Updates a school district</remarks>
            <param name="id">id of School District to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">School District not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.SchoolDistrictService.SchooldistrictsPostAsync(SchoolBusAPI.Models.SchoolDistrict)">
            <summary>
            
            </summary>
            <remarks>Adds a school district</remarks>
            <param name="item"></param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.IServiceAreaService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IServiceAreaService.ServiceareasGetAsync">
            <summary>
            
            </summary>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IServiceAreaService.ServiceareasIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of ServiceArea to delete</param>
            <response code="200">OK</response>
            <response code="404">ServiceArea not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IServiceAreaService.ServiceareasIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <param name="id">id of ServiceArea to fetch</param>
            <response code="200">OK</response>
            <response code="404">ServiceArea not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IServiceAreaService.ServiceareasIdPutAsync(System.Int32,SchoolBusAPI.Models.ServiceArea)">
            <summary>
            
            </summary>
            <param name="id">id of ServiceArea to fetch</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">ServiceArea not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IServiceAreaService.ServiceareasPostAsync(SchoolBusAPI.Models.ServiceArea)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <response code="201">ServiceArea created</response>
        </member>
        <member name="T:SchoolBusAPI.Services.ServiceAreaService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceAreaService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceAreaService.ServiceareasGetAsync">
            <summary>
            
            </summary>
            <remarks>Returns a list of available districts</remarks>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceAreaService.ServiceareasIdDeletePostAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a Service Area</remarks>
            <param name="id">id of Service Area to delete</param>
            <response code="200">OK</response>
            <response code="404">Service Area not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceAreaService.ServiceareasIdGetAsync(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns a specific Service Area</remarks>
            <param name="id">id of Service Area to fetch</param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceAreaService.ServiceareasIdPutAsync(System.Int32,SchoolBusAPI.Models.ServiceArea)">
            <summary>
            
            </summary>
            <remarks>Updates a Service Area</remarks>
            <param name="id">id of Service Area to update</param>
            <param name="body"></param>
            <response code="200">OK</response>
            <response code="404">Service Area not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceAreaService.ServiceareasPostAsync(SchoolBusAPI.Models.ServiceArea)">
            <summary>
            
            </summary>
            <remarks>Adds a Service Area</remarks>
            <param name="body"></param>
            <response code="200">OK</response>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceBase.GetCurrentUserId">
            <summary>
            Returns the current user ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchoolBusAPI.Services.ServiceBase.GetCurrentSmUserId">
            <summary>
            Returns the current Site Minder User ID
            </summary>
            <returns></returns>
        </member>
        <member name="T:SchoolBusAPI.Services.IUserService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.GetUsers">
            <summary>
            
            </summary>
            <remarks>Returns all users</remarks>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.DeleteUser(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a user</remarks>
            <param name="id">id of User to delete</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.GetUser(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns data for a particular user</remarks>
            <param name="id">id of User to fetch</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.UpdateUser(System.Int32,SchoolBusAPI.ViewModels.UserViewModel)">
            <summary>
            
            </summary>
            <remarks>Updates a user</remarks>
            <param name="id">id of User to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.GetUserRoles(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the roles for a user</remarks>
            <param name="id">id of User to fetch</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.CreateUserRole(System.Int32,SchoolBusAPI.ViewModels.UserRoleViewModel)">
            <summary>
            
            </summary>
            <remarks>Adds a role to a user</remarks>
            <param name="id">id of User to update</param>
            <param name="item"></param>
            <response code="201">Role created for user</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.UpdateUserRole(System.Int32,System.Int32,SchoolBusAPI.ViewModels.UserRoleViewModel)">
            <summary>
            
            </summary>
            <remarks>Updates the roles for a user</remarks>
            <param name="id">id of User to update</param>
            <param name="userRoleId">id of User Role to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.CreateUser(SchoolBusAPI.ViewModels.UserViewModel)">
            <summary>
            
            </summary>
            <remarks>Create new user</remarks>
            <param name="item"></param>
            <response code="201">User created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.IUserService.SearchUsers(System.Nullable{System.Int32}[],System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches Users
            </summary>
            <remarks>Used for the search users.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="surname"></param>
            <param name="includeInactive">True if Inactive users will be returned</param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Services.UserService">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.#ctor(SchoolBusAPI.Models.DbAppContext,Microsoft.AspNetCore.Http.IHttpContextAccessor,AutoMapper.IMapper)">
            <summary>
            Create a service and set the database context
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.GetUsers">
            <summary>
            
            </summary>
            <remarks>Returns all users</remarks>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.GetUser(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns data for a particular user</remarks>
            <param name="id">id of User to fetch</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.CreateUser(SchoolBusAPI.ViewModels.UserViewModel)">
            <summary>
            
            </summary>
            <remarks>Create new user</remarks>
            <param name="item"></param>
            <response code="201">User created</response>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.UpdateUser(System.Int32,SchoolBusAPI.ViewModels.UserViewModel)">
            <summary>
            
            </summary>
            <remarks>Updates a user</remarks>
            <param name="id">id of User to update</param>
            <param name="item"></param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.DeleteUser(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Deletes a user</remarks>
            <param name="id">id of User to delete</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.GetUserRoles(System.Int32)">
            <summary>
            
            </summary>
            <remarks>Returns the roles for a user</remarks>
            <param name="id">id of User to fetch</param>
            <response code="200">OK</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:SchoolBusAPI.Services.UserService.SearchUsers(System.Nullable{System.Int32}[],System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches Users
            </summary>
            <remarks>Used for the search users.</remarks>
            <param name="districts">Districts (array of id numbers)</param>
            <param name="surname"></param>
            <param name="includeInactive">True if Inactive users will be returned</param>
            <response code="200">OK</response>
        </member>
        <member name="T:SchoolBusAPI.Startup">
            <summary>
            The application Startup class
            </summary>
        </member>
        <member name="M:SchoolBusAPI.Startup.SetupHangfireCreateJob(Microsoft.Extensions.Logging.ILogger{SchoolBusAPI.Startup})">
            <summary>
            Setup the Hangfire job to populate the CCW Data table.
            Only necessary after a new deploy to PROD with an empty database.
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:SchoolBusAPI.Startup.SetupHangfireUpdateJob(Microsoft.Extensions.Logging.ILogger{SchoolBusAPI.Startup})">
            <summary>
            Setup the Hangfire job to update the CCW Data table.        
            </summary>
            <param name="logger"></param>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.AttachmentViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.AttachmentViewModel.Id">
            <summary>
            Primary Key
            </summary>
            <value>Primary Key</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.AttachmentViewModel.FileName">
            <summary>
            Filename as passed by the user uploading the file
            </summary>
            <value>Filename as passed by the user uploading the file</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.AttachmentViewModel.Description">
            <summary>
            A note about the attachment,  optionally maintained by the user.
            </summary>
            <value>A note about the attachment,  optionally maintained by the user.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.AttachmentViewModel.Type">
            <summary>
            Type of attachment
            </summary>
            <value>Type of attachment</value>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.CurrentUserViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.GivenName">
            <summary>
            Gets or Sets GivenName
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.Surname">
            <summary>
            Gets or Sets Surname
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.Active">
            <summary>
            Gets or Sets Active
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.SmUserId">
            <summary>
            Gets or Sets SmUserId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.SmAuthorizationDirectory">
            <summary>
            Gets or Sets SmAuthorizationDirectory
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.District">
            <summary>
            The District to which this User is affliated.
            </summary>
            <value>The District to which this User is affliated.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.OverdueInspections">
            <summary>
            Gets or Sets OverdueInspections
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.ScheduledInspections">
            <summary>
            Gets or Sets ScheduledInspections
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.DueWithin30DaysInspections">
            <summary>
            Gets or Sets DueNextMonthInspections
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.CurrentUserViewModel.ReInspections">
            <summary>
            Gets or Sets ReInspections
            </summary>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.HistoryViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:SchoolBusAPI.ViewModels.HistoryViewModel.#ctor">
            <summary>
            Default constructor, required by entity framework
            </summary>
        </member>
        <member name="M:SchoolBusAPI.ViewModels.HistoryViewModel.#ctor(System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:SchoolBusAPI.ViewModels.HistoryViewModel" /> class.
            </summary>
            <param name="Id">A system-generated unique identifier for a History (required).</param>
            <param name="HistoryText">The text of the history entry tracked against the related entity..</param>
            <param name="LastUpdateUserid">Audit information - SM User Id for the User who most recently updated the record..</param>
            <param name="LastUpdateTimestamp">Audit information - Timestamp for record modification.</param>
            <param name="AffectedEntityId">The primary key of the affected record.</param>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.HistoryViewModel.Id">
            <summary>
            A system-generated unique identifier for a History
            </summary>
            <value>A system-generated unique identifier for a History</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.HistoryViewModel.HistoryText">
            <summary>
            The text of the history entry tracked against the related entity.
            </summary>
            <value>The text of the history entry tracked against the related entity.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.HistoryViewModel.LastUpdateUserid">
            <summary>
            Audit information - SM User Id for the User who most recently updated the record.
            </summary>
            <value>Audit information - SM User Id for the User who most recently updated the record.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.HistoryViewModel.LastUpdateTimestamp">
            <summary>
            Audit information - Timestamp for record modification
            </summary>
            <value>Audit information - Timestamp for record modification</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.HistoryViewModel.AffectedEntityId">
            <summary>
            The primary key of the affected record
            </summary>
            <value>The primary key of the affected record</value>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.NotificationViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.EventId">
            <summary>
            Gets or Sets EventId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.Event2Id">
            <summary>
            Gets or Sets Event2Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.HasBeenViewed">
            <summary>
            Gets or Sets HasBeenViewed
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.IsWatchNotification">
            <summary>
            Gets or Sets IsWatchNotification
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.IsExpired">
            <summary>
            Gets or Sets IsExpired
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.IsAllDay">
            <summary>
            Gets or Sets IsAllDay
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.PriorityCode">
            <summary>
            Gets or Sets PriorityCode
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.NotificationViewModel.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.PermissionViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermissionViewModel.Code">
            <summary>
            Gets or Sets Code
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermissionViewModel.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermissionViewModel.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermissionViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermissionViewModel.ExpiryDate">
            <summary>
            Gets or Sets ExpiryDate
            </summary>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.PermitViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.PermitNumber">
            <summary>
            Gets or Sets PermitNumber
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.PermitIssueDate">
            <summary>
            Gets or Sets PermitIssueDate
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusOwnerName">
            <summary>
            Gets or Sets SchoolBusOwnerName
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusOwnerAddressLine1">
            <summary>
            Gets or Sets SchoolBusOwnerAddressLine1
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusOwnerAddressLine2">
            <summary>
            Gets or Sets SchoolBusOwnerAddressLine2
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusMobilityAidCapacity">
            <summary>
            Gets or Sets SchoolBusMobilityAidCapacity
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusOwnerCity">
            <summary>
            Gets or Sets SchoolBusOwnerCity
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusOwnerProvince">
            <summary>
            Gets or Sets SchoolBusOwnerProvince
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusOwnerPostalCode">
            <summary>
            Gets or Sets SchoolBusOwnerPostalCode
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.IcbcRegistrationNumber">
            <summary>
            Gets or Sets IcbcRegistrationNumber
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.VehicleIdentificationNumber">
            <summary>
            Gets or Sets VehicleIdentificationNumber
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.IcbcModelYear">
            <summary>
            Gets or Sets IcbcModelYear
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.IcbcMake">
            <summary>
            Gets or Sets IcbcMake
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.RestrictionsText">
            <summary>
            Gets or Sets RestrictionsText
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolDistrictshortName">
            <summary>
            Gets or Sets SchoolDistrictshortName
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.SchoolBusSeatingCapacity">
            <summary>
            Gets or Sets SchoolBusSeatingCapacity
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.UnitNumber">
            <summary>
            The unit number of the Bus as defined by the School Bus owner - freeform text.
            </summary>
            <value>The unit number of the Bus as defined by the School Bus owner - freeform text.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.PermitClassCode">
            <summary>
            The enumerated class of School Bus from drop down
            </summary>
            <value>The enumerated class of School Bus from drop down</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.PermitViewModel.BodyTypeCode">
            <summary>
            The enumerated body type of the School Bus from drop down
            </summary>
            <value>The enumerated body type of the School Bus from drop down</value>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.RolePermissionViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RolePermissionViewModel.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RolePermissionViewModel.PermissionId">
            <summary>
            Gets or Sets PermissionId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RolePermissionViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RolePermissionViewModel.ExpiryDate">
            <summary>
            Gets or Sets ExpiryDate
            </summary>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.RoleViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RoleViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RoleViewModel.Name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RoleViewModel.Description">
            <summary>
            Gets or Sets Description
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.RoleViewModel.ExpiryDate">
            <summary>
            Gets or Sets ExpiryDate
            </summary>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.Id">
            <summary>
            Primary Key
            </summary>
            <value>Primary Key</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.Name">
            <summary>
            The name of the School Bus owner as defined by the user&#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors.
            </summary>
            <value>The name of the School Bus owner as defined by the user&#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.Status">
            <summary>
            Status of the School Bus owner - enumerated value Active,  Archived
            </summary>
            <value>Status of the School Bus owner - enumerated value Active,  Archived</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.DateCreated">
            <summary>
            The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition.
            </summary>
            <value>The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.PrimaryContact">
            <summary>
            Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.
            </summary>
            <value>Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.District">
            <summary>
            The District to which this School Bus is affliated.
            </summary>
            <value>The District to which this School Bus is affliated.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.Contacts">
            <summary>
            The set of contacts related to the School Bus Owner.
            </summary>
            <value>The set of contacts related to the School Bus Owner.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.Notes">
            <summary>
            The set of notes about the school bus owner entered by users.
            </summary>
            <value>The set of notes about the school bus owner entered by users.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.Attachments">
            <summary>
            The set of attachments about the school bus owner uploaded by the users.
            </summary>
            <value>The set of attachments about the school bus owner uploaded by the users.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.History">
            <summary>
            The history of updates made to the School Bus Owner data.
            </summary>
            <value>The history of updates made to the School Bus Owner data.</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.NextInspectionDate">
            <summary>
            The next inspection date associated with this owner
            </summary>
            <value>The next inspection date associated with this owner</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.NumberOfBuses">
            <summary>
            The number of buses for which this owner is associated with
            </summary>
            <value>The number of buses for which this owner is associated with</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.SchoolBusOwnerViewModel.NextInspectionTypeCode">
            <summary>
            Type Code for the Next InspectionType.  Null if there are no next inspections.
            </summary>
            <value>Type Code for the Next InspectionType.  Null if there are no next inspections.</value>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.UserDetailsViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserDetailsViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserDetailsViewModel.Active">
            <summary>
            Gets or Sets Active
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserDetailsViewModel.GivenName">
            <summary>
            Gets or Sets GivenName
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserDetailsViewModel.Surname">
            <summary>
            Gets or Sets Surname
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserDetailsViewModel.Initials">
            <summary>
            Gets or Sets Initials
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserDetailsViewModel.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserDetailsViewModel.Permissions">
            <summary>
            Gets or Sets Permissions
            </summary>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.UserFavouriteViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserFavouriteViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserFavouriteViewModel.Name">
            <summary>
            Context Name
            </summary>
            <value>Context Name</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserFavouriteViewModel.Value">
            <summary>
            Saved search
            </summary>
            <value>Saved search</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserFavouriteViewModel.IsDefault">
            <summary>
            Gets or Sets IsDefault
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserFavouriteViewModel.Type">
            <summary>
            Type of favourite
            </summary>
            <value>Type of favourite</value>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserListViewModel.Active">
            <summary>
            Gets or Sets Active
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserListViewModel.GivenName">
            <summary>
            Gets or Sets GivenName
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserListViewModel.Surname">
            <summary>
            Gets or Sets Surname
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserListViewModel.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserListViewModel.SmUserId">
            <summary>
            Gets or Sets SmUserId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserListViewModel.District">
            <summary>
            The District to which this User is affliated.
            </summary>
            <value>The District to which this User is affliated.</value>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.UserRoleViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserRoleViewModel.EffectiveDate">
            <summary>
            Gets or Sets EffectiveDate
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserRoleViewModel.RoleId">
            <summary>
            Gets or Sets RoleId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserRoleViewModel.UserId">
            <summary>
            Gets or Sets UserId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserRoleViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserRoleViewModel.ExpiryDate">
            <summary>
            Gets or Sets ExpiryDate
            </summary>
        </member>
        <member name="T:SchoolBusAPI.ViewModels.UserViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.Active">
            <summary>
            Gets or Sets Active
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.GivenName">
            <summary>
            Gets or Sets GivenName
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.Surname">
            <summary>
            Gets or Sets Surname
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.SmUserId">
            <summary>
            Gets or Sets SmUserId
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.UserRoles">
            <summary>
            Gets or Sets UserRoles
            </summary>
        </member>
        <member name="P:SchoolBusAPI.ViewModels.UserViewModel.District">
            <summary>
            The District to which this User is affliated.
            </summary>
            <value>The District to which this User is affliated.</value>
        </member>
    </members>
</doc>
